limit_value = -1
	
#GETSTATUSBYOUTLETID = SELECT LSH.* FROM LT_SO_HEADERS LSH WHERE LSH.OUTLET_ID = ? AND LSH.STATUS = 'DRAFT'

getStatusByOutletId = SELECT LSH.* FROM LT_SO_HEADERS LSH WHERE LSH.OUTLET_ID = ? AND LSH.STATUS = 'DRAFT'

#2.checkOrderStatus = select lsh.* FROM lt_so_headers lsh where lsh.order_number = ?

checkOrderStatus = SELECT LSH.* FROM LT_SO_HEADERS LSH WHERE LSH.ORDER_NUMBER = ?

#3.deleteLineDataByHeaderId = delete from lt_so_lines where header_id = ?

deleteLineDataByHeaderId = DELETE FROM LT_SO_LINES WHERE HEADER_ID = ?

#4.
getAllOrderInprocess = select lsh.*,lsl.line_id ,lsl.product_id ,lsl.quantity,\
lsl.list_price,lsl.ptr_price , \
lsl.status as lineStatus \
from lt_so_headers lsh \
LEFT JOIN LT_SO_LINES LSL ON LSH.HEADER_ID = LSL.HEADER_ID \
WHERE LSH.STATUS = 'INPROCESS'
    


getOrderHeaderV1 = select b.header_id from ( \
	select a.* from( SELECT lsh.header_id, lsh.status, lsh.creation_date, \
	case \
	when lsh.status = 'DRAFT' then 1  \
	when lsh.status = 'PENDING_APPROVAL'   \
	then 2 when lsh.status = 'INPROCESS'  \
	then 3 when lsh.status = 'REJECTED'   \
	then 4 when lsh.status = 'ERROR'   \
	then 5 when lsh.status = 'APPROVED'   \
	then 6 when lsh.status = 'PROCESSED'   \
	then 7 else 9 \
	end status_o \
	FROM lt_so_headers lsh, lt_mast_outlets_v lmo   \
		WHERE 1=1   \
		and lsh.outlet_id = lmo.outlet_id   \
		AND COALESCE(LMO.DISTRIBUTOR_ID ,'xx') = COALESCE( ? ,COALESCE(LMO.DISTRIBUTOR_ID,'xx'))  \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx'))   \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx'))   \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE ||   \
	LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ),'xx') LIKE \
	COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || \
	LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME),'xx'))   \


getOrderHeaderV11 = SELECT A.* FROM( SELECT LMI.QUANTITY AS INVENTORYQUANTITY , LSH.CREATION_DATE  AS CDATE,(LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
,LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
lsh.latitude , lsh.longitude, lsh.remark, \
lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptrPrice ,LSL.PTR_PRICE AS LINEPTRPRICE, LSL.LIST_PRICE AS LINELISTPRICE, \
lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1, lsh.SIEBEL_REMARK, lsh.SIEBEL_STATUS, lsh.SIEBEL_INVOICENUMBER \
,case when lsh.status = 'DRAFT' then 1  \
when lsh.status = 'PENDING_APPROVAL' then 2 \
when lsh.status = 'INPROCESS' then 3  \
when lsh.status = 'REJECTED' then 4  \
when lsh.status = 'ERROR' then 5 \
when lsh.status = 'APPROVED' then 6 \
when lsh.status = 'PROCESSED' then 7 \
else 9 \
end status_o \
from  \
lt_so_headers lsh \
left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
WHERE 1 = 1 \
AND COALESCE(LMO.DISTRIBUTOR_ID ,'xx') = COALESCE( ? ,COALESCE(LMO.DISTRIBUTOR_ID,'xx'))  \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx'))   \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx'))   \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE ||  \
LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ),'xx') LIKE \
COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || \
LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME),'xx'))   \


getOrderHeaderV1RemovingPendingOrders = select b.header_id from ( \
	select a.* from( SELECT lsh.header_id, lsh.status, lsh.creation_date, lsh.last_update_date, \
	case \
	when lsh.status = 'DRAFT' then 1  \
	when lsh.status = 'INPROCESS'  \
	then 3 when lsh.status = 'REJECTED'   \
	then 4 when lsh.status = 'ERROR'   \
	then 5 when lsh.status = 'APPROVED'   \
	then 6 when lsh.status = 'PROCESSED'   \
	then 7 else 9 \
	end status_o \
	FROM lt_so_headers lsh, lt_mast_outlets_v lmo   \
		WHERE 1=1   \
		and lsh.outlet_id = lmo.outlet_id   \
		AND lsh.status <>('PENDING_APPROVAL' ) \
		AND COALESCE(LMO.DISTRIBUTOR_ID ,'xx') = COALESCE( ? ,COALESCE(LMO.DISTRIBUTOR_ID,'xx'))  \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx'))   \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx'))   \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE ||   \
	LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ),'xx') LIKE \
	COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || \
	LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME),'xx'))   \


	
#AND COALESCE(LSH.HEADER_ID ,-99) = COALESCE( ? ,COALESCE(LSH.HEADER_ID,-99))   \ 
 



#8.
APPENDINCODE = AND COALESCE(LSH.OUTLET_ID ,-99) =  COALESCE( ? ,COALESCE(LSH.OUTLET_ID),-99)) A ORDER BY A.STATUS_O, A.CREATION_DATE DESC ) B LIMIT ?  OFFSET ?

#9.concate||
getOrderLineV1COPY1 =select a.* from( select lmi.quantity as inventoryQuantity , lsh.creation_date  as cdate, (lmo.address_1 ||' '|| lmo.address_2)  as outletAddress  \
	,lsh.header_id, lsh.order_number, lmp.*, lsh.order_date, lsh.status, lsh.address, \
	lsh.latitude , lsh.longitude, lsh.status, lsh.remark, \
	lsh.delivery_date, lsh.created_by as userId, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
	lmpl.list_price, lmpl.price_list , lmpl.ptr_price ,   lsl.ptr_price as linePtrPrice, lsl.list_price as linelistPrice, \
	lsl.line_id, lsl.product_id, lsl.quantity , lsl.delivery_date  \
	, case when lsh.status = 'DRAFT' then 1  \
		when lsh.status = 'PENDING_APPROVAL' then 2  \
		when lsh.status = 'INPROCESS' then 3  \
		when lsh.status = 'REJECTED' then 4  \
  	    when lsh.status = 'ERROR' then 5  \
  	    when lsh.status = 'APPROVED' then 6  \
  	    when lsh.status = 'PROCESSED' then 7  \
  	    else 9  \
  	    end status_o  \
	from  \
	lt_so_headers lsh  \
	inner join lt_so_lines lsl on lsh.header_id = lsl.header_id  \
	inner join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id  \
	inner join lt_mast_products_v lmp on lmp.product_id = lsl.product_id  \
	inner join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list  \
	inner join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code  \
	WHERE 1 = 1 
	
#10. vaibhav& shubham 18-march-2024 query optimize
#getOrderLineV1 = select a.* from( select lmi.quantity as inventoryQuantity , lsh.creation_date  as cdate,(lmo.address_1 ||' '|| lmo.address_2)  as outletAddress \
#	,lsh.header_id, lsh.order_number, lmp.*, lsh.order_date, lsh.status, lsh.address,  \
#	lsh.latitude , lsh.longitude, lsh.status, lsh.remark,   \
#	lsh.delivery_date, lsh.created_by as userId, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
#	lmpl.list_price, lmpl.price_list , lmpl.ptr_price ,lsl.ptr_price as linePtrPrice, lsl.list_price as linelistPrice, \
#	lsl.line_id, lsl.product_id, lsl.quantity , lsl.delivery_date \
#	, case when lsh.status = 'DRAFT' then 1  \
#		when lsh.status = 'PENDING_APPROVAL' then 2 \
#		when lsh.status = 'INPROCESS' then 3  \
#		when lsh.status = 'REJECTED' then 4  \
#  	    when lsh.status = 'ERROR' then 5  \
#  	    when lsh.status = 'APPROVED' then 6  \
#  	    when lsh.status = 'PROCESSED' then 7  \
#  	    else 9 \
#  	    end status_o \
#	from  \
#		lt_so_headers lsh \
#		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
#		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
#		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
#		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
#		left join lt_mast_positions_v lmpo  on lmo.positions_id = lmpo.position_id \
#		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
#		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
#	WHERE 1 = 1
    
#getOrderLineV1 = SELECT A.* FROM( SELECT LMI.QUANTITY AS INVENTORYQUANTITY , LSH.CREATION_DATE  AS CDATE,(LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
#	,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
#    LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
#    LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
#    LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
#    , LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
#	lsh.latitude , lsh.longitude, lsh.remark,   \
#	lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
#	LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptrPrice ,LSL.PTR_PRICE AS LINEPTRPRICE, LSL.LIST_PRICE AS LINELISTPRICE, \
#	lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1 \
#	, case when lsh.status = 'DRAFT' then 1  \
#		when lsh.status = 'PENDING_APPROVAL' then 2 \
#		when lsh.status = 'INPROCESS' then 3  \
#		when lsh.status = 'REJECTED' then 4  \
#  	    when lsh.status = 'ERROR' then 5 \
#  	    when lsh.status = 'APPROVED' then 6 \
#  	    when lsh.status = 'PROCESSED' then 7 \
#  	    else 9 \
#  	    end status_o \
#	from  \
#		lt_so_headers lsh \
#		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
#		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
#		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
#		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
#		left join lt_mast_positions_v lmpo  on lmo.positions_id = lmpo.position_id \
#		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
#		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
#	WHERE 1 = 1


#comment on 11-Sep-24 by shubham magare bcz used fun for inventQty 
#getOrderLineV1 = SELECT A.* FROM( SELECT LMI.QUANTITY AS INVENTORY_QUANTITY , LSH.CREATION_DATE  AS CDATE,(LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
#	,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
#    LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
#    LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
#    LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
#    , LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
#	lsh.latitude , lsh.longitude, lsh.remark,   \
#	lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
#	LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptr_Price ,LSL.PTR_PRICE AS LINE_PTR_PRICE, LSL.LIST_PRICE AS LINELIST_PRICE, \
#	lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1, lsh.SIEBEL_REMARK, lsh.SIEBEL_STATUS, lsh.SIEBEL_INVOICENUMBER \
#	, case when lsh.status = 'DRAFT' then 1  \
#		when lsh.status = 'PENDING_APPROVAL' then 2 \
#		when lsh.status = 'INPROCESS' then 3  \
#		when lsh.status = 'REJECTED' then 4  \
#  	    when lsh.status = 'ERROR' then 5 \
#  	    when lsh.status = 'APPROVED' then 6 \
#  	    when lsh.status = 'PROCESSED' then 7 \
#  	    else 9 \
#  	    end status_o \
#	from  \
#		lt_so_headers lsh \
#		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
#		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
#		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
#		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
#		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
#		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
#	WHERE 1 = 1
   
      
getOrderLineV1 = SELECT A.* FROM( SELECT XXATFL_GET_INVENTORY_QTY(lmd.distributor_id,lmp.product_id) AS INVENTORY_QUANTITY , LSH.CREATION_DATE  AS CDATE,(LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
	,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
    LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
    LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
    LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
    , LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
	lsh.latitude , lsh.longitude, lsh.remark,   \
	lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
	LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptr_Price ,LSL.PTR_PRICE AS LINE_PTR_PRICE, LSL.LIST_PRICE AS LINE_LIST_PRICE, \
	lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1, lsh.SIEBEL_REMARK, lsh.SIEBEL_STATUS, lsh.SIEBEL_INVOICENUMBER \
	, case when lsh.status = 'DRAFT' then 1  \
		when lsh.status = 'PENDING_APPROVAL' then 2 \
		when lsh.status = 'INPROCESS' then 3  \
		when lsh.status = 'REJECTED' then 4  \
  	    when lsh.status = 'ERROR' then 5 \
  	    when lsh.status = 'APPROVED' then 6 \
  	    when lsh.status = 'PROCESSED' then 7 \
  	    else 9 \
  	    end status_o \
	from  \
		lt_so_headers lsh \
		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
	WHERE 1 = 1   
   
   
getOrderLineV1RemovingPendingOrders = SELECT A.* FROM( SELECT XXATFL_GET_INVENTORY_QTY(lmd.distributor_id,lmp.product_id) AS INVENTORY_QUANTITY , LSH.CREATION_DATE  AS CDATE, \
lsh.LAST_UPDATE_DATE, (LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
	,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
    LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
    LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
    LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
    , LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
	lsh.latitude , lsh.longitude, lsh.remark,   \
	lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
	LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptr_Price ,LSL.PTR_PRICE AS LINE_PTR_PRICE, LSL.LIST_PRICE AS LINELIST_PRICE, \
	lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1, lsh.SIEBEL_REMARK, lsh.SIEBEL_STATUS, lsh.SIEBEL_INVOICENUMBER \
	, case when lsh.status = 'DRAFT' then 1  \
		when lsh.status = 'INPROCESS' then 2  \
		when lsh.status = 'REJECTED' then 3  \
  	    when lsh.status = 'ERROR' then 4 \
  	    when lsh.status = 'APPROVED' then 5 \
  	    when lsh.status = 'PROCESSED' then 6 \
  	    else 9 \
  	    end status_o \
	from  \
		lt_so_headers lsh \
		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
	WHERE 1 = 1
   
    
    
#11.
genrate_order_number_seq = SELECT nextval('genrate_order_number_seq')		

#12.
getDistributorCode = select lmd.distributor_crm_code from \
	lt_mast_distributors_v lmd, \
	lt_mast_outlets_v lmo \
	where 1=1 \
	AND LMO.DISTRIBUTOR_ID = LMD.DISTRIBUTOR_ID \
	and lmo.outlet_id = ?
    
#13.   
#getActiveDistUsersFromHeaderId = select * from lt_mast_users lmu \
#where 1=1 \
#and upper(status) = 'ACTIVE' \
#and upper(user_type ) = 'DISTRIBUTOR' \
#and distributor_id = ( \
#SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO \
#WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER  = ? ))	

getActiveDistUsersFromHeaderId = select \
lmu.USER_ID, lmu.ORG_ID, lmu.DISTRIBUTOR_ID, lmu.OUTLET_ID, lmu.MOBILE_NUMBER, lmu.USER_TYPE, lmu.USER_TYPE, \
lmu.EMPLOYEE_CODE, lmu.USER_NAME, lmu.DESIGNATION, lmu.ADDRESS, lmu.EMAIL, lmu.ALTERNATE_NO, lmu.STATUS, \
lmu.CREATED_BY, lmu.CREATION_DATE, lmu.LAST_UPDATE_LOGIN, lmu.LAST_UPDATED_BY, lmu.LAST_UPDATE_DATE, \
lmu.IMAGE_TYPE, lmu.IMAGE_NAME,lmu.LATITUDE, lmu.LONGITUDE, lmu.ADDRESS_DETAILS, lmu.RECENT_SEARCH_ID, \
lmu.POSITION_ID, lmu.TOKEN_DATA, lmu.ISFIRSTLOGIN, lmu.TERRITORY  \
from lt_mast_users lmu \
where 1=1 \
and upper(status) = 'ACTIVE' \
and upper(user_type ) = 'DISTRIBUTOR' \
and distributor_id = ( \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO \
WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER  = ? ))	


#14.
#getActiveSalesUsersFromHeaderId = select * from lt_mast_users lmu \
#where 1=1 \
#and upper(status) = 'ACTIVE' \
#and upper(user_type ) = 'SALES' \
#and distributor_id = ( \
#SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO \
#WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER  = ? ))	
  
getActiveSalesUsersFromHeaderId = select \
lmu.USER_ID, lmu.ORG_ID, lmu.DISTRIBUTOR_ID, lmu.OUTLET_ID, lmu.MOBILE_NUMBER, lmu.USER_TYPE, lmu.USER_TYPE, \
lmu.EMPLOYEE_CODE, lmu.USER_NAME, lmu.DESIGNATION, lmu.ADDRESS, lmu.EMAIL, lmu.ALTERNATE_NO, lmu.STATUS, \
lmu.CREATED_BY, lmu.CREATION_DATE, lmu.LAST_UPDATE_LOGIN, lmu.LAST_UPDATED_BY, lmu.LAST_UPDATE_DATE, \
lmu.IMAGE_TYPE, lmu.IMAGE_NAME,lmu.LATITUDE, lmu.LONGITUDE, lmu.ADDRESS_DETAILS, lmu.RECENT_SEARCH_ID, \
lmu.POSITION_ID, lmu.TOKEN_DATA, lmu.ISFIRSTLOGIN, lmu.TERRITORY \
from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'SALES'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER = ? ))
  
    
#15.
#GETORDERHEADERCOUNT = SELECT count(lsh.header_id) \
#from lt_so_headers lsh, lt_mast_outlets_v lmo \
#WHERE 1=1 \
#and lsh.outlet_id = lmo.outlet_id \
#AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx')) \
#AND COALESCE(LSH.ORDER_NUMBER ,'xx') =  COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx')) \
#AND LMO.DISTRIBUTOR_ID = COALESCE(?,LMO.DISTRIBUTOR_ID) \
#AND LSH.HEADER_ID =  COALESCE( ? ,LSH.HEADER_ID) \
#AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE ),'xx') \
#LIKE COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE),'xx')) 

getOrderHeaderCount = SELECT count(lsh.header_id)   \
from lt_so_headers lsh, lt_mast_outlets_v lmo   \
WHERE 1=1   \
and lsh.outlet_id = lmo.outlet_id   \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx'))   \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx'))   \
AND  COALESCE(LMO.DISTRIBUTOR_ID,'xx') = COALESCE(?  , COALESCE(LMO.DISTRIBUTOR_ID,'xx')) \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE ),'xx')   \
LIKE COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE),'xx')) 

#AND COALESCE (LSH.HEADER_ID,-99) = COALESCE( ? , COALESCE (LSH.HEADER_ID,-99))  \


#16.
GETORDERHEADERCOUNTCOPY2 = SELECT count(lsh.header_id)  from \
lt_so_headers lsh, \
lt_mast_outlets_v lmo, \
lt_mast_employees_v lme, \
lt_mast_positions_v lmpo  \
WHERE 1=1 \
and lsh.outlet_id = lmo.outlet_id \
and lmo.positions_id = lmpo.position_id \
and lme.position = lmpo.position \
and COALESCE(upper(lsh.status),'xx') =  COALESCE( ?  ,COALESCE(upper(lsh.status),'xx')) \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') =  COALESCE( ?  ,COALESCE(LSH.ORDER_NUMBER,'xx')) \
AND COALESCE(LME.EMPLOYEE_ID,-99) =  COALESCE( ? ,COALESCE(LME.EMPLOYEE_ID,-99)) \
AND COALESCE(LMO.DISTRIBUTOR_ID ,-99) =  COALESCE( ?  ,COALESCE(LMO.DISTRIBUTOR_ID,-99)) \
AND COALESCE(LSH.HEADER_ID ,-99) =  COALESCE( ? ,COALESCE(LSH.HEADER_ID,-99)) \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE ),'xx') LIKE \
COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE),'xx')) 


#17.
GETORDERHEADERCOUNTCOPY1 = SELECT count(lsh.header_id) \
from \
lt_so_headers lsh \
inner join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
WHERE 1=1 \
AND COALESCE(UPPER(LSH.STATUS),'xx') =  COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx')) \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') =  COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx')) \
AND COALESCE(LMO.DISTRIBUTOR_ID ,-99) =  COALESCE( ? ,COALESCE(LMO.DISTRIBUTOR_ID,-99)) \
AND COALESCE(LSH.HEADER_ID ,-99) =  COALESCE( ? ,COALESCE(LSH.HEADER_ID,-99)) \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE ),'xx') \
LIKE COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE),'xx'))   

#18.no changes
getDistributorDetailsByOutletId = select distributor_id,distributor_sequance, distributor_crm_code from lt_mast_distributors_v  \
LMD WHERE DISTRIBUTOR_ID = (  \
select distributor_id from lt_mast_outlets_v lmo where outlet_id = ? )

#19.no changes
updateDistributorSequance = update lt_mast_distributors_v set distributor_sequance = ? where distributor_id = ?

getMobileNumber = select mobile_number from lt_mast_users lmu where user_id = ?

getUserTypeAndDisId = select lmu.user_type, lmu.distributor_id, user_id, position_id, lmu.EMPLOYEE_CODE from lt_mast_users lmu where lmu.user_id = ?

getUsersByDistributorId = select lmu.user_id from lt_mast_users lmu where lmu.distributor_id  = ?

getPositionIdByUserId = select position_id from lt_mast_users lmu where user_id = ?

getOutletIdsByPositionId = select distinct(outlet_id) from lt_mast_outlets_v lmo where 1=1 and positions_id = ?

getOrderCancellationReport = select distinct name AS order_cancellation_Reason from siebel.S_LST_OF_VAL \
WHERE TYPE = 'RETURN_REASON' \
and ACTIVE_FLG = 'Y' ORDER BY name ASC


getTemplateAgainstDistributor = SELECT * FROM LT_TEMPLATE_HEADERS lth WHERE DISTRIBUTOR_ID = ? AND TEMPLATE_HEADER_ID = ?

getTemplateAgainstDistributors = SELECT * FROM LT_TEMPLATE_HEADERS lth WHERE DISTRIBUTOR_ID = ?

#comment on 21-Aug-2024 bcz in template caseqty now display 
#getProductDetailsAgainstheaderId = SELECT * FROM LT_TEMPLATE_LINES ltl WHERE TEMPLATE_HEADER_ID = ?

getProductDetailsAgainstheaderId = SELECT ltl.*,SPI.CASE_PACK AS units_Per_Case \
FROM LT_TEMPLATE_LINES ltl ,SIEBEL.S_PROD_INT SPI \
WHERE SPI.ROW_ID = ltl.PRODUCT_ID \
AND TEMPLATE_HEADER_ID = ?


#comment on 21-Aug-2024 bcz in template caseqty now display 
#getProductDetailsAgainstheaderId1 = SELECT ltl.*, lmp.PTR_PRICE, lmp.LIST_PRICE  \
#FROM LT_TEMPLATE_LINES ltl, LT_MAST_PRICE_LISTS_V lmp \
#WHERE TEMPLATE_HEADER_ID = ? \
#AND lmp.PRICE_LIST = ? \
#AND lmp.PRODUCT_CODE = ltl.PRODUCT_ID 

getProductDetailsAgainstheaderId1 = SELECT ltl.*, lmp.PTR_PRICE, lmp.LIST_PRICE ,SPI.CASE_PACK AS units_Per_Case \
FROM LT_TEMPLATE_LINES ltl, LT_MAST_PRICE_LISTS_V lmp ,SIEBEL.S_PROD_INT SPI \
WHERE TEMPLATE_HEADER_ID = ? \
AND lmp.PRICE_LIST = ? \
AND lmp.PRODUCT_CODE = ltl.PRODUCT_ID \
and SPI.ROW_ID = ltl.PRODUCT_ID

getProductDetailsAgainstheaderId2 =SELECT ltl.*, lmp.PTR_PRICE, lmp.LIST_PRICE ,SPI.CASE_PACK AS units_Per_Case, \
XXATFL_GET_INVENTORY_QTY(?,ltl.PRODUCT_ID) AS Inventory_Quantity \
FROM LT_TEMPLATE_LINES ltl, LT_MAST_PRICE_LISTS_V lmp ,SIEBEL.S_PROD_INT SPI \
WHERE TEMPLATE_HEADER_ID = ? \
AND lmp.PRICE_LIST = ? \
AND lmp.PRODUCT_CODE = ltl.PRODUCT_ID \
and SPI.ROW_ID = ltl.PRODUCT_ID

getActiveAreaHeadUsersFromHeaderId = select \
lmu.USER_ID, lmu.ORG_ID, lmu.DISTRIBUTOR_ID, lmu.OUTLET_ID, lmu.MOBILE_NUMBER, lmu.USER_TYPE, lmu.USER_TYPE, \
lmu.EMPLOYEE_CODE, lmu.USER_NAME, lmu.DESIGNATION, lmu.ADDRESS, lmu.EMAIL, lmu.ALTERNATE_NO, lmu.STATUS, \
lmu.CREATED_BY, lmu.CREATION_DATE, lmu.LAST_UPDATE_LOGIN, lmu.LAST_UPDATED_BY, lmu.LAST_UPDATE_DATE, \
lmu.IMAGE_TYPE, lmu.IMAGE_NAME,lmu.LATITUDE, lmu.LONGITUDE, lmu.ADDRESS_DETAILS, lmu.RECENT_SEARCH_ID, \
lmu.POSITION_ID, lmu.TOKEN_DATA, lmu.ISFIRSTLOGIN, lmu.TERRITORY  \
from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'AREAHEAD'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER = ? ))

getActiveSysAdminUsersFromHeaderId= select \
lmu.USER_ID, lmu.ORG_ID, lmu.DISTRIBUTOR_ID, lmu.OUTLET_ID, lmu.MOBILE_NUMBER, lmu.USER_TYPE, lmu.USER_TYPE, \
lmu.EMPLOYEE_CODE, lmu.USER_NAME, lmu.DESIGNATION, lmu.ADDRESS, lmu.EMAIL, lmu.ALTERNATE_NO, lmu.STATUS, \
lmu.CREATED_BY, lmu.CREATION_DATE, lmu.LAST_UPDATE_LOGIN, lmu.LAST_UPDATED_BY, lmu.LAST_UPDATE_DATE, \
lmu.IMAGE_TYPE, lmu.IMAGE_NAME,lmu.LATITUDE, lmu.LONGITUDE, lmu.ADDRESS_DETAILS, lmu.RECENT_SEARCH_ID, \
lmu.POSITION_ID, lmu.TOKEN_DATA, lmu.ISFIRSTLOGIN, lmu.TERRITORY  \
from lt_mast_users lmu \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'SYSTEMADMINISTRATOR'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = (SELECT OUTLET_ID FROM LT_SO_HEADERS LSH WHERE HEADER_ID = ? AND ORDER_NUMBER = ? ))

deletelinedetailsbytemplateid = DELETE FROM  LT_TEMPLATE_LINES ltl WHERE TEMPLATE_HEADER_ID = ?

#deleteHeaderdetailsbytemplateid = DELETE FROM ( \
#SELECT * FROM LT_TEMPLATE_HEADERS LSH, LT_TEMPLATE_LINES LSL \
#WHERE LSH.TEMPLATE_HEADER_ID = LSL.TEMPLATE_HEADER_ID \
#AND lSh.DISTRIBUTOR_ID = ?)

deleteHeaderdetailsbytemplateid = DELETE FROM  LT_TEMPLATE_HEADERS LSH \
WHERE lSh.DISTRIBUTOR_ID = ?

getOutletDetailsByOutletId =  SELECT lmov.OUTLET_CODE, lmov.OUTLET_NAME FROM LT_MAST_OUTLETS_V lmov WHERE lmov.OUTLET_ID = ?


getAllConfiguration = SELECT * FROM LT_MAST_SYS_VARIABLES

getuserTypeAgainsUserId = SELECT \
lmu.USER_ID, lmu.ORG_ID, lmu.DISTRIBUTOR_ID, lmu.OUTLET_ID, lmu.MOBILE_NUMBER, lmu.USER_TYPE, lmu.USER_TYPE, \
lmu.EMPLOYEE_CODE, lmu.USER_NAME, lmu.DESIGNATION, lmu.ADDRESS, lmu.EMAIL, lmu.ALTERNATE_NO, lmu.STATUS, \
lmu.CREATED_BY, lmu.CREATION_DATE, lmu.LAST_UPDATE_LOGIN, lmu.LAST_UPDATED_BY, lmu.LAST_UPDATE_DATE, \
lmu.IMAGE_TYPE, lmu.IMAGE_NAME,lmu.LATITUDE, lmu.LONGITUDE, lmu.ADDRESS_DETAILS, lmu.RECENT_SEARCH_ID, \
lmu.POSITION_ID, lmu.TOKEN_DATA, lmu.ISFIRSTLOGIN, lmu.TERRITORY  \
FROM LT_MAST_USERS lmu WHERE lmu.USER_ID = ?

SiebelCreateSaveOrderApi = https://10.245.4.70:9014/siebel/v1.0/service/AT New Order Creation REST BS/CreateOrder?matchrequestformat=y 

getStatusForSalesReturn = SELECT DISTINCT (upper(STATUS_CD)) AS status_code, STATUS_CD AS status FROM SIEBEL.S_PROD_INV_CAT ORDER by STATUS_CD asc

getAvailabilityForSalesReturn = SELECT DISTINCT (upper(avail_cd)) AS availability_code, avail_cd AS availability FROM SIEBEL.S_PROD_INV_CAT ORDER by avail_cd asc


#This is original query comment on 17-JUly-2024 for getting default value
getLocationForSalesReturn = SELECT SI.NAME AS "LOCATION"  \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI \
WHERE SOE.ROW_ID = SI.BU_ID \
AND SOE.ROW_ID = ?

#getLocationForSalesReturn = select name from siebel.s_invloc where row_id in \
#(SELECT so.SRC_INVLOC_ID  FROM SIEBEL.S_INVOICE si,  SIEBEL.S_ORDER so \
#WHERE si.ORDER_ID = so.ROW_ID \
#AND si.INVC_NUM =  ?)


#getSalesReturnHeader = SELECT a.sales_return_header_id FROM  (SELECT * FROM LT_SALES_RETURN_HEADERS lsrh, LT_MAST_OUTLETS_V lmov  \
# WHERE 1=1  \
# AND lsrh.OUTLET_ID = lmov.OUTLET_ID  \
#AND COALESCE(UPPER(lsrh.RETURN_STATUS),'xx') = COALESCE( ?  ,COALESCE(UPPER(lsrh.RETURN_STATUS),'xx'))   \
#AND COALESCE(lsrh.INVOICE_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.INVOICE_NUMBER,'xx'))   \
#AND COALESCE(lsrh.SALES_RETURN_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.SALES_RETURN_NUMBER,'xx'))  \
#)a \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


getSalesReturnHeader = SELECT * FROM  (SELECT DISTINCT lsrh.sales_return_header_id FROM LT_SALES_RETURN_HEADERS lsrh, LT_MAST_OUTLETS_V lmov, LT_SALES_RETURN_LINES lsrl   \
WHERE 1=1  \
AND lsrh.OUTLET_ID = lmov.OUTLET_ID  \
AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
AND COALESCE (lsrh.OUTLET_ID, 'xx') = COALESCE ( ? ,COALESCE (lsrh.OUTLET_ID,'xx')) \
AND COALESCE(UPPER(lsrh.STATUS),'xx') = COALESCE( ?  ,COALESCE(UPPER(lsrh.STATUS),'xx'))   \
AND COALESCE(lsrh.INVOICE_NUMBER ,'xx') LIKE COALESCE( ? ,COALESCE(lsrh.INVOICE_NUMBER,'xx'))   \
AND COALESCE(lsrh.SALES_RETURN_NUMBER ,'xx') LIKE COALESCE( ? ,COALESCE(lsrh.SALES_RETURN_NUMBER,'xx'))  \
AND COALESCE(lsrh.INVOICE_NUMBER || lsrh.SALES_RETURN_NUMBER, 'xx') LIKE \
COALESCE(UPPER(?) ,COALESCE(lsrh.INVOICE_NUMBER || lsrh.SALES_RETURN_NUMBER, 'xx')) \
ORDER BY lsrh.sales_return_header_id  DESC \
)a \
OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


#getSalesReturnRecordCount = SELECT count(a.sales_return_header_id) FROM  (SELECT * FROM LT_SALES_RETURN_HEADERS lsrh, LT_MAST_OUTLETS_V lmov  \
#WHERE 1=1 \
#AND lsrh.OUTLET_ID = lmov.OUTLET_ID  \
#AND COALESCE(UPPER(lsrh.RETURN_STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(lsrh.RETURN_STATUS),'xx'))  \
#AND COALESCE(lsrh.INVOICE_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.INVOICE_NUMBER,'xx'))   \
#AND COALESCE(lsrh.SALES_RETURN_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.SALES_RETURN_NUMBER,'xx'))  \
#)a


getSalesReturnRecordCount = SELECT count(a.sales_return_header_id) FROM  (SELECT * FROM LT_SALES_RETURN_HEADERS lsrh, LT_MAST_OUTLETS_V lmov  \
WHERE 1=1 \
AND lsrh.OUTLET_ID = lmov.OUTLET_ID  \
AND COALESCE(UPPER(lsrh.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(lsrh.STATUS),'xx'))  \
AND COALESCE(lsrh.INVOICE_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.INVOICE_NUMBER,'xx'))   \
AND COALESCE(lsrh.SALES_RETURN_NUMBER ,'xx') = COALESCE( ? ,COALESCE(lsrh.SALES_RETURN_NUMBER,'xx'))  \
)a


getSalesReturnline = SELECT lsrh.*,lsrl.* \
FROM LT_SALES_RETURN_HEADERS lsrh  \
, LT_SALES_RETURN_LINES lsrl , \
LT_MAST_OUTLETS_V lmov  \
WHERE 1=1 \
AND lsrh.sales_return_header_id = lsrl.SALES_RETURN_HEADER_ID \
AND lsrh.OUTLET_ID = lmov.OUTLET_ID 


deleteSalesReturnLinesByHeaderId = DELETE FROM LT_SALES_RETURN_LINES lsrl WHERE lsrl.SALES_RETURN_HEADER_ID = ?


getInvoiceDetails = SELECT ORG2.INTEGRATION_ID AS CUSTOMER_NUMBER \
     ,ORG2.NAME DISTRIBUTOR_NAME \
     ,ORG2.ROW_ID AS DISTRIBUTOR_CODE \
     ,ORG2.ROW_ID AS DISTRIBUTOR_ID \
     ,ORG1.NAME AS OUTLET_NAME \
     ,ORG1.ROW_ID AS OUTLET_CODE \
     , ORD.ORDER_NUM AS ORDER_NUMBER \
     , SPI.ROW_ID AS PRODUCT_CODE  \
     , ORL.DISPLAY_NAME AS PRODUCT_name   \
     , ORL.QTY_SHIPPED AS shippedQuantity \
     , ORL.NET_PRI AS  PTR_PRICE \
     , ORL.BASE_UNIT_PRI AS list_PRICE \
     , orl.x_ptr_base_pri AS ptr_base_price \
     , INV.INVC_NUM AS INVOICE_NUMBER \
     , TRUNC(INV.INVC_DT) AS INVOICE_DATE  \
     , LOC.NAME AS LOCATION \
     , nvl(orl.NET_PRI,0)*nvl(orl.qty_shipped,0) Total_Amount \
     , PRL.ROW_ID AS priceListId  \
     , prl.NAME AS priceListName, LOC.ROW_ID AS INVENTORY_ID \
      FROM \
  SIEBEL.S_ORDER ORD \
, SIEBEL.S_PROD_INT SPI \
, SIEBEL.S_PROD_LN SPL \
, SIEBEL.S_BU SBU \
, SIEBEL.S_ORG_EXT ORG2 \
, SIEBEL.S_PRI_LST PRL \
, SIEBEL.S_ORDER_ITEM ORL  \
, SIEBEL.S_ORDER_TYPE SOT1 \
, SIEBEL.S_INVLOC LOC \
, SIEBEL.S_ORG_EXT ORG1 \
, SIEBEL.S_ORDER_X SOX \
, SIEBEL.S_ACCNTRT SCT \
, SIEBEL.S_INVOICE INV \
, SIEBEL.S_POSTN POS \
, siebel.s_user su \
where ord.bu_id = sbu.row_id \
and org2.row_id = sbu.row_id \
and prl.row_id(+) = ord.pri_lst_id \
and ord.row_id = orl.order_id(+) \
and loc.row_id(+) = ord.src_invloc_id \
and ord.order_type_id = sot1.row_id \
and ord.accnt_id = org1.row_id \
and sox.par_row_id(+) = ord.row_id \
and sox.attrib_07= sct.row_id(+) \
and inv.order_id = ord.row_id \
and ord.pr_postn_id=pos.row_id \
and pos.pr_emp_id=su.row_id \
and spi.PR_PROD_LN_ID=spl.row_id \
AND orl.prod_id = spi.row_id \
and ord.order_cat_cd='Service' \
AND ORL.STATUS_CD ='Invoiced' \
AND COALESCE (ORG2.ROW_ID,'xx') =COALESCE ( ? , COALESCE(ORG2.ROW_ID,'xx')) \
AND COALESCE(INV.INVC_NUM,'xx') = COALESCE( ? ,COALESCE(INV.INVC_NUM,'xx'))  \
AND COALESCE(UPPER(INV.INVC_NUM || INV.INVC_DT ),'xx') LIKE  \
COALESCE( ? ,COALESCE(UPPER(INV.INVC_NUM || INV.INVC_DT ),'xx'))  \
ORDER BY INV.INVC_DT desc \
OFFSET ? ROWS FETCH NEXT ? ROWS ONLY
 
 
#getInvoiceDetails =SELECT ORG2.INTEGRATION_ID AS CUSTOMER_NUMBER \
#     ,ORG2.NAME DISTRIBUTOR_NAME \
#     ,ORG2.ROW_ID AS DISTRIBUTOR_CODE \
#     ,ORG2.ROW_ID AS DISTRIBUTOR_ID \
#     ,ORG1.NAME AS OUTLET_NAME \
#     ,ORG1.ROW_ID AS OUTLET_CODE \
#     , ORD.ORDER_NUM AS ORDER_NUMBER \
#     , SPI.ROW_ID AS PRODUCT_CODE  \
#     , ORL.DISPLAY_NAME AS PRODUCT_name   \
#     , ORL.QTY_SHIPPED AS shippedQuantity \
#     , ORL.NET_PRI AS  PTR_PRICE \
#     , ORL.BASE_UNIT_PRI AS list_PRICE \
#     , orl.x_ptr_base_pri AS ptr_base_price \
#     , INV.INVC_NUM AS INVOICE_NUMBER \
#     , TRUNC(INV.INVC_DT) AS INVOICE_DATE  \
#     , LOC.NAME AS LOCATION \
#     , nvl(orl.NET_PRI,0)*nvl(orl.qty_shipped,0) Total_Amount \
#     , PRL.ROW_ID AS priceListId  \
#     , prl.NAME AS priceListName , LOC.ROW_ID AS INVENTORY_ID \
#      FROM \
#  SIEBEL.S_ORDER ORD \
#, SIEBEL.S_PROD_INT SPI \
#, SIEBEL.S_BU SBU \
#, SIEBEL.S_ORG_EXT ORG2 \
#, SIEBEL.S_PRI_LST PRL \
#, SIEBEL.S_ORDER_ITEM ORL   \
#, SIEBEL.S_INVLOC LOC \
#, SIEBEL.S_ORG_EXT ORG1 \
#, SIEBEL.S_INVOICE INV \
#, SIEBEL.S_POSTN POS \
#where ord.bu_id = sbu.row_id \
#and org2.row_id = sbu.row_id \
#and prl.row_id(+) = ord.pri_lst_id \
#and ord.row_id = orl.order_id(+) \
#and loc.row_id(+) = ord.src_invloc_id \
#and ord.accnt_id = org1.row_id \
#and inv.order_id = ord.row_id \
#and ord.pr_postn_id=pos.row_id \
#AND orl.prod_id = spi.row_id \
#and ord.order_cat_cd='Service' \
#AND ORL.STATUS_CD ='Invoiced' \
#AND ORG2.ROW_ID = ? \
#AND COALESCE(INV.INVC_NUM,'xx') = COALESCE( ? ,COALESCE(INV.INVC_NUM,'xx'))  \
#ORDER BY INV.INVC_DT DESC \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY
 
 
 
SiebelCreateSalesReturnApi = https://10.245.4.70:9014/siebel/v1.0/service/AT New Order Creation REST BS/CreateReturnOrder?matchrequestformat=y

getDefaultPriceListAgainstOutletId = SELECT DISTINCT LMPLV.PRICE_LIST \
FROM LT_MAST_PRICE_LISTS_V LMPLV \
LEFT JOIN LT_MAST_OUTLETS_v LMOV ON LMPLV.PRICE_LIST = LMOV.PRICE_LIST \
WHERE LMOV.OUTLET_id = ?
 
 
getOrderSequence = SELECT LT_ORDER_S.NEXTVAL FROM DUAL
 
 
 getSalesReturnSequence = select LT_SALES_RETURN_LINES_S.NEXTVAL FROM dual

getBeatNameAgainstInvoiceNo = SELECT lsh.BEAT_ID FROM LT_SO_HEADERS lsh WHERE lsh.SIEBEL_INVOICENUMBER = ?
 
getBeatNameAgainstInvoiceNoNew = SELECT lsh.BEAT_ID, lsh.SIEBEL_INVOICENUMBER FROM LT_SO_HEADERS lsh \
where SIEBEL_INVOICENUMBER IS NOT null \
AND BEAT_ID IS NOT NULL
  
offset_value = 10

getUserTypeAgainsUserId = SELECT DISTINCT lmu.USER_TYPE \
FROM LT_SO_HEADERS lsh inner JOIN LT_MAST_USERS lmu ON lsh.CREATED_BY=lmu.USER_ID \
where lsh.CREATED_BY =?


getHeaderDetailsByHeaderId =  SELECT * FROM LT_SO_HEADERS lsh WHERE lsh.HEADER_ID =?


getEmailBody= SELECT lmsv.SYSTEM_VALUE FROM LT_MAST_SYS_VARIABLES lmsv \
WHERE lmsv.VARIABLE_NAME = ?


getUserNameAgainsUserId= SELECT DISTINCT lmu.USER_NAME  \
FROM LT_SO_HEADERS lsh, LT_MAST_USERS lmu \
WHERE lsh.CREATED_BY = lmu.USER_ID \
and lsh.CREATED_BY = ?

getTotalAmount= SELECT lsl.PTR_PRICE FROM LT_SO_LINES lsl WHERE lsl.HEADER_ID = ?

getLotNumber = SELECT distinct SERIAL_NUM AS LOT_NUMBER FROM SIEBEL.S_ASSET \
WHERE PROD_ID = ? \
AND INVLOC_ID = ?

getSiebelDataById = SELECT lsh.SIEBEL_INVOICENUMBER, lsh.SIEBEL_STATUS, lsh.SIEBEL_REMARK, \
lsh.SIEBEL_JSONPAYLOAD, lsh.PRICE_LIST \
FROM LT_SO_HEADERS lsh WHERE lsh.HEADER_ID = ?

getAreaHeadDetails = select * from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'AREAHEAD'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = \
(SELECT DISTINCT OUTLET_ID FROM LT_SALES_RETURN_HEADERS LSH WHERE lsh.SALES_RETURN_NUMBER = ? \
AND lsh.INVOICE_NUMBER  = ? ))


getAreaHeadDetails = select * from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'AREAHEAD'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID =?)

getSalesReturnSiebelDataById = SELECT lsrh.SIEBEL_STATUS, lsrh.SIEBEL_REMARK, lsrh.CREATED_BY \
FROM LT_SALES_RETURN_HEADERS lsrh WHERE lsrh.SALES_RETURN_HEADER_ID = ?


#comment by me & keyur on 24-Oct-2024 bcz of getting duplicate data in final response
#getSalesReturnForPendingAprroval = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, lsrh.OUTLET_ID, \
#lsrh.RETURN_STATUS, lsrh.RETURN_REASON, lsrh.STATUS, lsrh.SALES_RETURN_DATE, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST,  \
#lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY, lsrl.AVAILABILITY, lsrl.STATUS AS STATUS1, lsrl.LOCATION, \
#lsrl.REMAINING_QUANTITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER  \
#FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrh.STATUS ='PENDING_APPROVAL' \
#AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID 


getSalesReturnForPendingAprroval = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, lsrh.OUTLET_ID, \
lsrh.RETURN_STATUS, lsrh.RETURN_REASON, lsrh.STATUS, lsrh.SALES_RETURN_DATE, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST  \
FROM LT_SALES_RETURN_HEADERS lsrh \
WHERE lsrh.STATUS ='PENDING_APPROVAL'


#AND COALESCE (UPPER (lsrh.SALES_RETURN_NUMBER || lsrh.INVOICE_NUMBER || lsrh.RETURN_STATUS || lsrh.OUTLET_ID || \
#lsrh.OUTLET_NAME || lsrh.RETURN_REASON),'xx') LIKE COALESCE ( ?, COALESCE (UPPER (lsrh.SALES_RETURN_NUMBER || \
#lsrh.INVOICE_NUMBER || lsrh.RETURN_STATUS || lsrh.OUTLET_ID || lsrh.OUTLET_NAME || lsrh.RETURN_REASON),'xx')) \
#ORDER BY lsrh.SALES_RETURN_DATE \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY



#getSalesReturnForPendingAprroval = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, lsrh.OUTLET_ID, \
#lsrh.RETURN_STATUS, lsrh.RETURN_REASON, lsrh.STATUS, lsrh.SALES_RETURN_DATE, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST,  \
#lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY, lsrl.AVAILABILITY, lsrl.STATUS, lsrl.LOCATION, \
#lsrl.REMAINING_QUANTITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER  \
#FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrh.STATUS ='PENDING_APPROVAL' \
#AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
#AND COALESCE (UPPER (lsrh.SALES_RETURN_NUMBER || lsrh.INVOICE_NUMBER || lsrh.RETURN_STATUS || lsrh.OUTLET_ID || \
#lsrh.OUTLET_NAME || lsrh.RETURN_REASON),'xx') LIKE COALESCE ( ? , COALESCE (UPPER (lsrh.SALES_RETURN_NUMBER || \
#lsrh.INVOICE_NUMBER || lsrh.RETURN_STATUS || lsrh.OUTLET_ID || lsrh.OUTLET_NAME || lsrh.RETURN_REASON),'xx')) \
#ORDER BY lsrh.SALES_RETURN_DATE \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


getSalesReturnHeaderId = SELECT DISTINCT lsrh.SALES_RETURN_HEADER_ID \
FROM LT_SALES_RETURN_HEADERS lsrh,  LT_SALES_RETURN_LINES lsrl \
WHERE lsrh.STATUS = 'PENDING_APPROVAL' \
AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
AND COALESCE (lsrh.OUTLET_ID, 'xx') = COALESCE ( ? ,COALESCE (lsrh.OUTLET_ID,'xx')) \
AND COALESCE (UPPER(lsrh.INVOICE_NUMBER || lsrh.SALES_RETURN_NUMBER) ,'xx') LIKE \
COALESCE (UPPER( ? ), COALESCE(UPPER(lsrh.INVOICE_NUMBER || lsrh.SALES_RETURN_NUMBER) ,'xx')) \
ORDER by lsrh.SALES_RETURN_HEADER_ID desc \
OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


# this is original query comment on 17-june-2024 for code optimization purpose
#getSalesReturnLineData = SELECT lsrl.SALES_RETURN_HEADER_ID, lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY, \
#lsrl.AVAILABILITY, lsrl.STATUS AS STATUS1 , lsrl.LOCATION, lsrl.REMAINING_QUANTITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER \
#FROM LT_SALES_RETURN_HEADERS lsrh , LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrh.STATUS ='PENDING_APPROVAL' \
#AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
#AND lsrh.SALES_RETURN_HEADER_ID = ? \

#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


getSalesReturnLineData = SELECT lsrl.SALES_RETURN_HEADER_ID, lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY, \
(Select spi.desc_text From siebel.s_prod_int spi where spi.ROW_ID =lsrl.PRODUCT_ID) product_Desc, \
lsrl.AVAILABILITY, lsrl.STATUS AS STATUS1 , lsrl.LOCATION, lsrl.REMAINING_QUANTITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER \
FROM LT_SALES_RETURN_HEADERS lsrh , LT_SALES_RETURN_LINES lsrl  \
WHERE lsrh.STATUS ='PENDING_APPROVAL' \
AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID 


getSalesReturnForPendingAprroval1 = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, lsrh.OUTLET_ID, \
lsrh.RETURN_STATUS, lsrh.RETURN_REASON, lsrh.STATUS, lsrh.SALES_RETURN_DATE, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST,  \
lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY, lsrl.AVAILABILITY, lsrl.STATUS AS STATUS1, lsrl.LOCATION, \
lsrl.REMAINING_QUANTITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER  \
FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
WHERE lsrh.STATUS ='PENDING_APPROVAL' \
AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
AND lsrh.SALES_RETURN_HEADER_ID = ? \


#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY

getTemplateAgainstDistributor12 = SELECT * FROM LT_TEMPLATE_HEADERS lth WHERE DISTRIBUTOR_ID = ?


getSalesOrderInvoiceNo = select DISTINCT lsh.SIEBEL_INVOICENUMBER  FROM LT_SO_HEADERS lsh, LT_SO_LINES lsl \
WHERE lsh.SIEBEL_INVOICENUMBER IS NOT NULL \
AND lsl.HEADER_ID = lsh.HEADER_ID  \
AND COALESCE (lsh.OUTLET_ID, 'xx') = COALESCE (? ,COALESCE (lsh.OUTLET_ID,'xx')) \
AND COALESCE (lsh.SIEBEL_INVOICENUMBER,'xx') LIKE COALESCE ( ? , COALESCE(lsh.SIEBEL_INVOICENUMBER,'xx')) \
ORDER BY lsh.SIEBEL_INVOICENUMBER desc \
OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


#getSalesOrderInvoiceNo = select DISTINCT INV.INVC_NUM  \
#FROM LT_SO_HEADERS lsh, LT_SO_LINES lsl, \
#SIEBEL.S_INVOICE INV, SIEBEL.S_ORDER ORD \
#WHERE lsl.HEADER_ID = lsh.HEADER_ID  \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND INV.ORDER_ID = ORD.ROW_ID \
#ORDER BY INV.INVC_NUM desc \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


getSoHeaderDataFromInvoiceNo = SELECT lsh.HEADER_ID, lsh.ORDER_NUMBER, lsh.OUTLET_ID, lsh.STATUS, \
lsh.ORDER_DATE AS ORDERDATE1, lsh.PRICE_LIST, lsh.BEAT_ID, lsh.SIEBEL_INVOICENUMBER, lsh.LATITUDE, lsh.LONGITUDE \
FROM LT_SO_HEADERS lsh WHERE lsh.SIEBEL_INVOICENUMBER = ? \
OFFSET ? ROWS FETCH NEXT ? ROWS ONLY 

#getSoLineData = SELECT * FROM  LT_SO_LINES lsl, LT_SO_HEADERS lsh  \
#WHERE lsl.HEADER_ID = ? \
#AND lsl.HEADER_ID = lsh.HEADER_ID \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY

#getSoLineData = SELECT LSH.*,LSL.*,ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE,LOC.NAME AS LOCATION,LOC.ROW_ID \
#FROM  LT_SO_LINES LSL,LT_SO_HEADERS LSH ,SIEBEL.S_ORDER ORD,SIEBEL.S_ORDER_ITEM ORL ,SIEBEL.S_INVLOC LOC \
#WHERE  LSL.HEADER_ID = LSH.HEADER_ID \
#AND ORD.ROW_ID = ORL.ORDER_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND LSL.PRODUCT_ID = ORL.PROD_ID \
#AND LOC.ROW_ID(+) = ORD.SRC_INVLOC_ID \
#and ord.order_cat_cd='Service' \
#AND LSH.SIEBEL_INVOICENUMBER = ? \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


#getSoHeaderData = SELECT lsh.HEADER_ID, lsh.ORDER_NUMBER, lsh.OUTLET_ID, lsh.OUTLET_ID, lsh.STATUS, \
#lsh.ORDER_DATE, lsh.PRICE_LIST, lsh.BEAT_ID, lsh.SIEBEL_INVOICENUMBER, lsh.LATITUDE, lsh.LONGITUDE, \
#lsl.HEADER_ID,lsl.PRODUCT_ID,lsl.QUANTITY,lsl.LIST_PRICE,lsl.PTR_PRICE  \
#FROM LT_SO_HEADERS lsh, LT_SO_LINES lsl \
#WHERE  lsl.HEADER_ID = lsh.HEADER_ID \
#and lsh.SIEBEL_INVOICENUMBER = ? \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


#getSoHeaderData = SELECT lsh.HEADER_ID, lsh.ORDER_NUMBER, lsh.OUTLET_ID, lsh.OUTLET_ID, lsh.STATUS, \
#lsh.ORDER_DATE, lsh.PRICE_LIST, lsh.BEAT_ID, lsh.SIEBEL_INVOICENUMBER, lsh.LATITUDE, lsh.LONGITUDE, \
#ORG2.NAME DISTRIBUTOR_NAME, ORG2.ROW_ID AS DISTRIBUTOR_CODE, ORG2.ROW_ID AS DISTRIBUTOR_ID, \
#ORG1.NAME AS OUTLET_NAME ,ORG1.ROW_ID AS OUTLET_CODE,  \
#ORD.ORDER_NUM AS ORDER_NUMBER,  \
#INV.INVC_NUM AS INVOICE_NUMBER, TRUNC(INV.INVC_DT) AS INVOICE_DATE, \
#PRL.ROW_ID AS priceListId, PRL.NAME AS PRICELISTNAME \
#FROM SIEBEL.S_ORDER ORD, SIEBEL.S_BU SBU, SIEBEL.S_ORG_EXT ORG2, SIEBEL.S_PRI_LST PRL, \
#SIEBEL.S_ORG_EXT ORG1, SIEBEL.S_INVOICE INV, SIEBEL.S_POSTN POS, SIEBEL.S_USER SU,LT_SO_HEADERS LSH \
#where ord.bu_id = sbu.row_id \
#and org2.row_id = sbu.row_id \
#and prl.row_id(+) = ord.pri_lst_id \
#and ord.accnt_id = org1.row_id \
#and inv.order_id = ord.row_id \
#and ord.pr_postn_id=pos.row_id \
#AND POS.PR_EMP_ID=SU.ROW_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#and ord.order_cat_cd='Service' \
#AND lsh.SIEBEL_INVOICENUMBER = ? \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


#comment on 25-Aprl-2025
#getSoHeaderData = SELECT ORG2.NAME DISTRIBUTOR_NAME, ORG2.ROW_ID AS DISTRIBUTOR_CODE, ORG2.ROW_ID AS DISTRIBUTOR_ID, \
#lsh.OUTLET_ID AS OUTLET_CODE, ORG1.NAME AS OUTLET_NAME, lsh.ORDER_NUMBER,  \
#INV.INVC_NUM AS INVOICE_NUMBER,  TRUNC(INV.INVC_DT) AS INVOICE_DATE, \
#lsh.PRICE_LIST, lsh.BEAT_ID AS BEAT_NAME,   PRL.NAME AS PRICELISTNAME , \
#lsh.HEADER_ID, ORD.ORDER_NUM AS ORDER_NUMBER,  lsh.SIEBEL_INVOICENUMBER,lsh.STATUS, lsh.ORDER_DATE, PRL.ROW_ID AS priceListId \
#FROM SIEBEL.S_ORDER ORD, SIEBEL.S_BU SBU, SIEBEL.S_ORG_EXT ORG2, SIEBEL.S_PRI_LST PRL, \
#SIEBEL.S_ORG_EXT ORG1, SIEBEL.S_INVOICE INV, SIEBEL.S_POSTN POS, SIEBEL.S_USER SU,LT_SO_HEADERS LSH \
#where ord.bu_id = sbu.row_id \
#and org2.row_id = sbu.row_id \
#and prl.row_id(+) = ord.pri_lst_id \
#and ord.accnt_id = org1.row_id \
#and inv.order_id = ord.row_id \
#and ord.pr_postn_id=pos.row_id \
#AND POS.PR_EMP_ID=SU.ROW_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#and ord.order_cat_cd='Service' \
#AND lsh.SIEBEL_INVOICENUMBER = ? 


#getSoHeaderData = SELECT ORG2.NAME DISTRIBUTOR_NAME, ORG2.ROW_ID AS DISTRIBUTOR_CODE, ORG2.ROW_ID AS DISTRIBUTOR_ID, \
#lsh.OUTLET_ID AS OUTLET_CODE, ORG1.NAME AS OUTLET_NAME, lsh.ORDER_NUMBER,  \
#INV.INVC_NUM AS INVOICE_NUMBER,  TRUNC(INV.INVC_DT) AS INVOICE_DATE, \
#lsh.PRICE_LIST, lsh.BEAT_ID AS BEAT_NAME,   PRL.NAME AS PRICELISTNAME , \
#lsh.HEADER_ID, ORD.ORDER_NUM AS ORDER_NUMBER,  lsh.SIEBEL_INVOICENUMBER,lsh.STATUS, lsh.ORDER_DATE, PRL.ROW_ID AS priceListId \
#FROM SIEBEL.S_ORDER ORD, SIEBEL.S_BU SBU, SIEBEL.S_ORG_EXT ORG2, SIEBEL.S_PRI_LST PRL, \
#SIEBEL.S_ORG_EXT ORG1, SIEBEL.S_INVOICE INV, SIEBEL.S_POSTN POS, SIEBEL.S_USER SU,LT_SO_HEADERS LSH \
#where ord.bu_id = sbu.row_id \
#and org2.row_id = sbu.row_id \
#and prl.row_id(+) = ord.pri_lst_id \
#and ord.accnt_id = org1.row_id \
#and inv.order_id = ord.row_id \
#and ord.pr_postn_id=pos.row_id \
#AND POS.PR_EMP_ID=SU.ROW_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND ORD.ORDER_CAT_CD='Service' \
#AND INV.INVC_NUM = ?

getSoHeaderData = SELECT ORG2.NAME DISTRIBUTOR_NAME, ORG2.ROW_ID AS DISTRIBUTOR_CODE, ORG2.ROW_ID AS DISTRIBUTOR_ID, \
lsh.OUTLET_ID AS OUTLET_CODE, ORG1.NAME AS OUTLET_NAME, lsh.ORDER_NUMBER,  \
INV.INVC_NUM AS INVOICE_NUMBER,  TRUNC(INV.INVC_DT) AS INVOICE_DATE, \
lsh.PRICE_LIST, lsh.BEAT_ID AS BEAT_NAME,   PRL.NAME AS PRICELISTNAME , \
lsh.HEADER_ID, ORD.ORDER_NUM AS ORDER_NUMBER,  lsh.SIEBEL_INVOICENUMBER,lsh.STATUS, lsh.ORDER_DATE, PRL.ROW_ID AS priceListId \
FROM SIEBEL.S_ORDER ORD, SIEBEL.S_BU SBU, SIEBEL.S_ORG_EXT ORG2, SIEBEL.S_PRI_LST PRL, \
SIEBEL.S_ORG_EXT ORG1, SIEBEL.S_INVOICE INV, SIEBEL.S_POSTN POS, SIEBEL.S_USER SU,LT_SO_HEADERS LSH \
where ord.bu_id = sbu.row_id \
and org2.row_id = sbu.row_id \
and prl.row_id(+) = ord.pri_lst_id \
and ord.accnt_id = org1.row_id \
and inv.order_id = ord.row_id \
and ord.pr_postn_id=pos.row_id \
AND POS.PR_EMP_ID=SU.ROW_ID \
AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
and ord.order_cat_cd='Service' \
AND lsh.SIEBEL_INVOICENUMBER = ?


#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY

#comment on 25-April-2024
#getSoLineData = SELECT LSL.PRODUCT_ID AS PRODUCT_CODE, spi.PART_NUM AS PRODUCT_NAME, lsl.QUANTITY AS shipped_Quantity, lsl.PTR_PRICE, lsl.LIST_PRICE, \
#ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE,LOC.NAME AS LOCATION,LOC.ROW_ID AS INVENTORY_ID \
#FROM  LT_SO_LINES LSL,LT_SO_HEADERS LSH ,SIEBEL.S_ORDER ORD,SIEBEL.S_ORDER_ITEM ORL ,SIEBEL.S_INVLOC LOC, SIEBEL.S_PROD_INT spi \
#WHERE  LSL.HEADER_ID = LSH.HEADER_ID \
#AND ORD.ROW_ID = ORL.ORDER_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND LSL.PRODUCT_ID = ORL.PROD_ID \
#AND LOC.ROW_ID(+) = ORD.SRC_INVLOC_ID \
#and ord.order_cat_cd='Service' \
#AND spi.ROW_ID = orl.PROD_ID \
#AND LSH.SIEBEL_INVOICENUMBER = ? 


#getSoLineData = SELECT LSL.PRODUCT_ID AS PRODUCT_CODE, spi.PART_NUM AS PRODUCT_NAME, lsl.QUANTITY AS shipped_Quantity, lsl.PTR_PRICE, lsl.LIST_PRICE, \
#ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE,LOC.NAME AS LOCATION,LOC.ROW_ID AS INVENTORY_ID \
#FROM  LT_SO_LINES LSL,\
#     LT_SO_HEADERS LSH \
#    ,SIEBEL.S_ORDER ORD \
#    ,SIEBEL.S_ORDER_ITEM ORL \
#    ,SIEBEL.S_INVLOC LOC \
#    ,SIEBEL.S_PROD_INT SPI \
#    ,SIEBEL.S_INVOICE INV \
#WHERE  LSL.HEADER_ID = LSH.HEADER_ID \
#AND ORD.ROW_ID = ORL.ORDER_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND LSL.PRODUCT_ID = ORL.PROD_ID \
#AND LOC.ROW_ID = ORD.SRC_INVLOC_ID \
#and inv.order_id = ord.row_id \
#and ord.order_cat_cd='Service' \
#AND SPI.ROW_ID = ORL.PROD_ID \
#AND ORL.STATUS_CD ='Invoiced' \
#AND INV.INVC_NUM  = ?

#comment on 10-May-2024 for return qty
#getSoLineData = SELECT LSL.PRODUCT_ID AS PRODUCT_CODE, spi.PART_NUM AS PRODUCT_NAME, lsl.QUANTITY AS shipped_Quantity, lsl.PTR_PRICE, lsl.LIST_PRICE, \
#ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE,LOC.NAME AS LOCATION,LOC.ROW_ID AS INVENTORY_ID \
#FROM  LT_SO_LINES LSL,LT_SO_HEADERS LSH ,SIEBEL.S_ORDER ORD,SIEBEL.S_ORDER_ITEM ORL ,SIEBEL.S_INVLOC LOC, SIEBEL.S_PROD_INT spi \
#WHERE  LSL.HEADER_ID = LSH.HEADER_ID \
#AND ORD.ROW_ID = ORL.ORDER_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND LSL.PRODUCT_ID = ORL.PROD_ID \
#AND LOC.ROW_ID(+) = ORD.SRC_INVLOC_ID \
#and ord.order_cat_cd='Service' \
#AND spi.ROW_ID = orl.PROD_ID \
#AND LSH.SIEBEL_INVOICENUMBER = ? 

# comment on 21-May-24 for java code optimi this is original
#getSoLineData = SELECT LSL.PRODUCT_ID AS PRODUCT_CODE, \
#    SPI.PART_NUM AS PRODUCT_NAME, \
#    LSL.QUANTITY AS SHIPPED_QUANTITY, \
#    LSL.PTR_PRICE, \
#    LSL.LIST_PRICE, \
#    ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE, \
#    LOC.NAME AS LOCATION, \
#    LOC.ROW_ID AS INVENTORY_ID, \
#    COALESCE(RETURN_QUANTITY.RETURN_QUANTITY,0) AS RETURN_QUANTITY  \
#FROM  \
#    LT_SO_LINES LSL,\
#    LT_SO_HEADERS LSH, \
#    SIEBEL.S_ORDER ORD, \
#    SIEBEL.S_ORDER_ITEM ORL, \
#    SIEBEL.S_INVLOC LOC, \
#    SIEBEL.S_PROD_INT SPI, \
#    (SELECT LSRL.PRODUCT_ID, \
#            SUM(LSRL.RETURN_QUANTITY) AS RETURN_QUANTITY  \
#        FROM LT_SALES_RETURN_LINES LSRL, LT_SALES_RETURN_HEADERS LSRH \
#        WHERE lsrh.INVOICE_NUMBER = ? \
#        AND lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
#        GROUP BY LSRL.PRODUCT_ID \
#    ) RETURN_QUANTITY \
#WHERE LSL.HEADER_ID = LSH.HEADER_ID \
#AND ORD.ROW_ID = ORL.ORDER_ID \
#AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
#AND LSL.PRODUCT_ID = ORL.PROD_ID \
#AND LOC.ROW_ID(+) = ORD.SRC_INVLOC_ID \
#AND SPI.ROW_ID = ORL.PROD_ID \
#AND LSH.SIEBEL_INVOICENUMBER = ? \
#AND SPI.ROW_ID = RETURN_QUANTITY.PRODUCT_ID(+) \
#AND ORD.ORDER_CAT_CD = 'Service'


getSoLineData = SELECT lsh.HEADER_ID, LSL.PRODUCT_ID AS PRODUCT_CODE, \
    SPI.PART_NUM AS PRODUCT_NAME, \
    (Select spi.desc_text From siebel.s_prod_int spi where spi.ROW_ID = LSL.PRODUCT_ID) product_Desc, \
    LSL.QUANTITY AS SHIPPED_QUANTITY, \
    LSL.PTR_PRICE, \
    LSL.LIST_PRICE, \
    ORL.X_PTR_BASE_PRI AS PTR_BASE_PRICE, \
    LOC.NAME AS LOCATION, \
    LOC.ROW_ID AS INVENTORY_ID, \
    COALESCE(RETURN_QUANTITY.RETURN_QUANTITY,0) AS RETURN_QUANTITY  \
FROM  \
    LT_SO_LINES LSL,\
    LT_SO_HEADERS LSH, \
    SIEBEL.S_ORDER ORD, \
    SIEBEL.S_ORDER_ITEM ORL, \
    SIEBEL.S_INVLOC LOC, \
    SIEBEL.S_PROD_INT SPI, \
    (SELECT LSRL.PRODUCT_ID, \
            SUM(LSRL.RETURN_QUANTITY) AS RETURN_QUANTITY  \
        FROM LT_SALES_RETURN_LINES LSRL, LT_SALES_RETURN_HEADERS LSRH \
        WHERE \
         lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
        GROUP BY LSRL.PRODUCT_ID \
    ) RETURN_QUANTITY \
WHERE LSL.HEADER_ID = LSH.HEADER_ID \
AND ORD.ROW_ID = ORL.ORDER_ID \
AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
AND LSL.PRODUCT_ID = ORL.PROD_ID \
AND LOC.ROW_ID(+) = ORD.SRC_INVLOC_ID \
AND SPI.ROW_ID = ORL.PROD_ID \
AND SPI.ROW_ID = RETURN_QUANTITY.PRODUCT_ID(+) \
AND ORD.ORDER_CAT_CD = 'Service'


#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY

#this is original code comment on 17-June-2024 for optimization purpose
#getSalesReturnLineDataForApproval = SELECT lsrl.* FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
#AND lsrh.SALES_RETURN_HEADER_ID = ? \
#ORDER BY lsrh.SALES_RETURN_DATE  DESC \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY


getSalesReturnLineDataForApproval = SELECT lsrl.* FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
WHERE lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID 


# this is original query comment on 17-June-2024 for optimization purpose
#getSalesReturnForAprroval1= SELECT distinct  lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, \
#lsrh.OUTLET_ID, lsrh.RETURN_STATUS, lsrh.ADDRESS, lsrh.LATITUDE, lsrh.LONGITUDE, lsrh.RETURN_REASON, lsrh.STATUS, \
#lsrh.SALES_RETURN_DATE,lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.CREATED_BY, lsrh.LAST_UPDATE_LOGIN, lsrh.LAST_UPDATED_BY, \
#lsrh.CREATION_DATE,lsrh.LAST_UPDATE_DATE, lsrh.SIEBEL_STATUS, lsrh.PRICE_LIST, to_char(lsrh.SIEBEL_REMARK) as SIEBEL_REMARK  \
#FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID \
#AND lsrh.SALES_RETURN_HEADER_ID = ? \
#ORDER BY SALES_RETURN_DATE  DESC \
#OFFSET ? ROWS FETCH NEXT ? ROWS ONLY

getSalesReturnForAprroval1= SELECT distinct  lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, \
lsrh.OUTLET_ID, lsrh.RETURN_STATUS, lsrh.ADDRESS, lsrh.LATITUDE, lsrh.LONGITUDE, lsrh.RETURN_REASON, lsrh.STATUS, \
lsrh.SALES_RETURN_DATE,lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.CREATED_BY, lsrh.LAST_UPDATE_LOGIN, lsrh.LAST_UPDATED_BY, \
lsrh.CREATION_DATE,lsrh.LAST_UPDATE_DATE, lsrh.SIEBEL_STATUS, lsrh.PRICE_LIST, to_char(lsrh.SIEBEL_REMARK) as SIEBEL_REMARK  \
FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
WHERE lsrh.SALES_RETURN_HEADER_ID = lsrl.SALES_RETURN_HEADER_ID 

#comment on 13-Aug-2024 bcz get error msg even inv is generated
#getInvoiceNumber = SELECT si.INVC_NUM FROM siebel.S_ORDER so, siebel.S_INVOICE si \
#WHERE si.ORDER_ID = so.ROW_ID \
#AND so.ORDER_NUM = ?

getInvoiceNumber = SELECT lsh.SIEBEL_INVOICENUMBER FROM LT_SO_HEADERS lsh WHERE lsh.ORDER_NUMBER = ?

#getInvoiceNumber = SELECT COALESCE(si.INVC_NUM,'null') AS INVC_NUM \
#FROM siebel.S_ORDER so, siebel.S_INVOICE si \
#WHERE si.ORDER_ID(+)= so.ROW_ID \
#AND so.ORDER_NUM = ?


getOrderType = SELECT INSTOCK_FLAG FROM LT_SO_HEADERS lsh WHERE lsh.ORDER_NUMBER = ?

getUserNameAgainsUserIdForSalesReturn = SELECT lmu.USER_NAME FROM LT_MAST_USERS lmu WHERE lmu.USER_ID = ?

getOrderNoFromInvoiceNoForSalesReturn = SELECT lsh.ORDER_NUMBER FROM LT_SO_HEADERS lsh , LT_SALES_RETURN_HEADERS lsrh \
WHERE lsrh.INVOICE_NUMBER =lsh.SIEBEL_INVOICENUMBER \
AND lsrh.INVOICE_NUMBER = ? 

getDistCRMCodeFromOutletCode = select distributor_crm_code from lt_mast_distributors_v lmd \
where DISTRIBUTOR_ID =(SELECT lmov.DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_V lmov WHERE lmov.OUTLET_ID = ?)

getProdNameFromProdId = SELECT lmpv.PRODUCT_DESC FROM LT_MAST_PRODUCTS_V lmpv WHERE lmpv.PRODUCT_ID = ?

getProdDescFromProdId = SELECT lmpv.PRODUCT_NAME FROM LT_MAST_PRODUCTS_V lmpv WHERE lmpv.PRODUCT_ID = ?


getProductId = SELECT DISTINCT lsrl.PRODUCT_ID  FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl \
WHERE lsrl.SALES_RETURN_HEADER_ID = lsrh.SALES_RETURN_HEADER_ID \
AND lsrh.INVOICE_NUMBER = ?

getInvoiceErrorMSg = SELECT lsh.SIEBEL_REMARK FROM LT_SO_HEADERS lsh WHERE lsh.ORDER_NUMBER = ?


#getSalesReturnOrderAgainstReturnOrderNo = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, lsrh.OUTLET_ID, lsrh.RETURN_STATUS, \
#lsrh.RETURN_REASON, lsrh.STATUS, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST, lsrh.SALES_RETURN_DATE, \
#lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY,lsrl.REMAINING_QUANTITY, lsrl.AVAILABILITY, lsrl.PRICE, \
#lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER, lsrl.STATUS AS STATUS1  \
#FROM LT_SALES_RETURN_HEADERS lsrh, LT_SALES_RETURN_LINES lsrl  \
#WHERE lsrl.SALES_RETURN_HEADER_ID = lsrh.SALES_RETURN_HEADER_ID \
#AND lsrh.SALES_RETURN_NUMBER = ?


getSalesReturnOrderAgainstReturnOrderNo = SELECT lsrh.SALES_RETURN_HEADER_ID, lsrh.SALES_RETURN_NUMBER, lsrh.INVOICE_NUMBER, \
lsrh.OUTLET_ID, lsrh.RETURN_STATUS, lsrh.RETURN_REASON, lsrh.STATUS, lsrh.BEAT_NAME, lsrh.OUTLET_NAME, lsrh.PRICE_LIST, lsrh.SALES_RETURN_DATE \
FROM LT_SALES_RETURN_HEADERS lsrh \
WHERE lsrh.SALES_RETURN_NUMBER = ?

getSalesReturnOrderLineData = SELECT lsrl.PRODUCT_ID, lsrl.SHIPPED_QUANTITY, lsrl.RETURN_QUANTITY,lsrl.REMAINING_QUANTITY, \
(Select spi.desc_text From siebel.s_prod_int spi where spi.ROW_ID = lsrl.PRODUCT_ID) product_Desc, \
lsrl.AVAILABILITY, lsrl.PRICE, lsrl.TOTAL_PRICE, lsrl.LOT_NUMBER, lsrl.STATUS AS STATUS1, lsrl.LOCATION \
FROM LT_SALES_RETURN_LINES lsrl \
WHERE lsrl.SALES_RETURN_HEADER_ID = ?


getSalesOfficersDetails = select * from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'SALESOFFICER'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = ?)

getSysAdminDetails = select * from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) = 'SYSTEMADMINISTRATOR'  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = ?)

getSysAdminDetailsForSalesReturn = SELECT * FROM LT_MAST_USERS lmu WHERE USER_TYPE = 'SYSTEMADMINISTRATOR'  \
AND ORG_ID = ?

getSoHeaderDataNew = SELECT lsh.HEADER_ID ,ORG2.NAME DISTRIBUTOR_NAME, ORG2.ROW_ID AS DISTRIBUTOR_CODE, ORG2.ROW_ID AS DISTRIBUTOR_ID, \
lsh.OUTLET_ID AS OUTLET_CODE, ORG1.NAME AS OUTLET_NAME, lsh.ORDER_NUMBER,  \
INV.INVC_NUM AS INVOICE_NUMBER,  TRUNC(INV.INVC_DT) AS INVOICE_DATE, \
lsh.PRICE_LIST, lsh.BEAT_ID AS BEAT_NAME,   PRL.NAME AS PRICELISTNAME , \
lsh.HEADER_ID, ORD.ORDER_NUM AS ORDER_NUMBER,  lsh.SIEBEL_INVOICENUMBER,lsh.STATUS, lsh.ORDER_DATE, PRL.ROW_ID AS priceListId \
FROM SIEBEL.S_ORDER ORD, SIEBEL.S_BU SBU, SIEBEL.S_ORG_EXT ORG2, SIEBEL.S_PRI_LST PRL, \
SIEBEL.S_ORG_EXT ORG1, SIEBEL.S_INVOICE INV, SIEBEL.S_POSTN POS, SIEBEL.S_USER SU,LT_SO_HEADERS LSH \
where ord.bu_id = sbu.row_id \
and org2.row_id = sbu.row_id \
and prl.row_id(+) = ord.pri_lst_id \
and ord.accnt_id = org1.row_id \
and inv.order_id = ord.row_id \
and ord.pr_postn_id=pos.row_id \
AND POS.PR_EMP_ID=SU.ROW_ID \
AND ORD.ORDER_NUM = LSH.ORDER_NUMBER \
and ord.order_cat_cd='Service' \
AND lsh.SIEBEL_INVOICENUMBER IS NOT null

getheaderByHeaderIdNew = select lsh.HEADER_ID FROM lt_so_headers lsh, lt_mast_outlets_v lmo where lsh.outlet_id = lmo.outlet_id 

getAvailableQuantity = SELECT lmiv.QUANTITY  FROM LT_MAST_INVENTORY_V lmiv \
WHERE lmiv.DIST_ID = ? \
and lmiv.PRODUCT_ID = ?


quantityCheck = SELECT lmiv.QUANTITY, lmiv.PRODUCT_ID, lmiv.DIST_ID FROM LT_MAST_INVENTORY_V lmiv \
WHERE lmiv.DIST_ID = ?


getUserNameFromSiebel = SELECT su.LOGIN FROM siebel.S_USER su,SIEBEL.S_CONTACT sc \
WHERE su.PAR_ROW_ID = sc.ROW_ID \
AND su.STATUS_CD ='Active' \
AND REPLACE(SC.CELL_PH_NUM,'+91','')= ?

getOrderHeaderV13 = SELECT LMI.QUANTITY AS INVENTORY_QUANTITY, LSH.CREATION_DATE AS CDATE, (LMO.ADDRESS_1 || ' ' || LMO.ADDRESS_2) AS OUTLET_ADDRESS, LSH.HEADER_ID, \
LSH.ORDER_NUMBER, LMP.PRODUCT_ID, LMP.CATEGORY_ID, LMP.ORG_ID, LMP.SUB_CATEGORY_ID, LMP.PRODUCT_TYPE, LMP."CATEGORY", \
LMP.SUBCATEGORY, LMP.PRODUCT_CODE, LMP.PRODUCT_NAME, LMP.PRODUCT_DESC, LMP.PRIMARY_UOM, LMP.SECONDARY_UOM, \
LMP.SECONDARY_UOM_VALUE, LMP.UNITS_PER_CASE, LMP."SEGMENT", LMP.BRAND, LMP."STYLE", LMP.FLAVOR, LMP.CASE_PACK, \
LMP.HSN_CODE, LMP.ORDERABLE, LMP.PRODUCT_IMAGE, LMP.STATUS AS STATUS1, LSH.ORDER_DATE, LSH.STATUS, LSH.ADDRESS, LSH.LATITUDE, \
LSH.LONGITUDE, LSH.REMARK, LSH.DELIVERY_DATE, LSH.CREATED_BY AS USER_ID, LSH.INSTOCK_FLAG, LSH.BEAT_ID as Beat_Id, LMO.OUTLET_ID, LMO.OUTLET_NAME, LMO.OUTLET_CODE, LMO.PROPRIETOR_NAME, LMPL.LIST_PRICE, LSH.PRICE_LIST, LMPL.PTR_PRICE AS PTR_PRICE, LSL.PTR_PRICE AS LINE_PTR_PRICE, \
LSL.LIST_PRICE AS LINE_LIST_PRICE, LSL.LINE_ID, LSL.PRODUCT_ID AS PRODUCT_ID_1, LSL.QUANTITY, LSL.DELIVERY_DATE AS DELIVERY_DATE1, \
LSH.SIEBEL_REMARK, LSH.SIEBEL_STATUS, LSH.SIEBEL_INVOICENUMBER, \
CASE WHEN LSH.STATUS = 'DRAFT' THEN 1  WHEN LSH.STATUS = 'PENDING_APPROVAL' THEN 2 \
WHEN LSH.STATUS = 'INPROCESS' THEN 3  WHEN LSH.STATUS = 'REJECTED' THEN 4  \
WHEN LSH.STATUS = 'ERROR' THEN 5 WHEN LSH.STATUS = 'APPROVED' THEN 6 \
WHEN LSH.STATUS = 'PROCESSED' THEN 7 ELSE 9 END AS STATUS_O FROM  LT_SO_HEADERS LSH \
LEFT JOIN LT_SO_LINES LSL ON LSH.HEADER_ID = LSL.HEADER_ID LEFT JOIN LT_MAST_OUTLETS_V LMO ON LSH.OUTLET_ID = LMO.OUTLET_ID \
LEFT JOIN LT_MAST_PRODUCTS_V LMP ON LMP.PRODUCT_ID = LSL.PRODUCT_ID \
LEFT JOIN LT_MAST_PRICE_LISTS_V LMPL ON LMPL.PRODUCT_CODE = LMP.PRODUCT_CODE AND LMPL.PRICE_LIST = LMO.PRICE_LIST \
LEFT JOIN LT_MAST_DISTRIBUTORS_V LMD ON LMO.DISTRIBUTOR_ID = LMD.DISTRIBUTOR_ID \
LEFT JOIN LT_MAST_INVENTORY_V LMI ON LMP.PRODUCT_CODE = LMI.PRODUCT_CODE AND LMD.DISTRIBUTOR_CODE = LMI.DIST_CODE \
WHERE LMO.DISTRIBUTOR_ID = nvl(?,LMO.DISTRIBUTOR_ID) \
AND LSH.STATUS NOT IN ('APPROVED','REJECTED') \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE(? ,COALESCE(UPPER(LSH.STATUS),'xx')) AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx')) AND COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME ||  LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) \
LIKE COALESCE( ?, COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) ) \


getOrderHeaderV133 = SELECT LMI.QUANTITY AS INVENTORY_QUANTITY, LSH.CREATION_DATE AS CDATE, (LMO.ADDRESS_1 || ' ' || LMO.ADDRESS_2) AS OUTLETADDRESS, LSH.HEADER_ID, \
LSH.ORDER_NUMBER, LMP.PRODUCT_ID, LMP.CATEGORY_ID, LMP.ORG_ID, LMP.SUB_CATEGORY_ID, LMP.PRODUCT_TYPE, LMP."CATEGORY", \
LMP.SUBCATEGORY, LMP.PRODUCT_CODE, LMP.PRODUCT_NAME, LMP.PRODUCT_DESC, LMP.PRIMARY_UOM, LMP.SECONDARY_UOM, \
LMP.SECONDARY_UOM_VALUE, LMP.UNITS_PER_CASE, LMP."SEGMENT", LMP.BRAND, LMP."STYLE", LMP.FLAVOR, LMP.CASE_PACK, \
LMP.HSN_CODE, LMP.ORDERABLE, LMP.PRODUCT_IMAGE, LMP.STATUS AS STATUS1, LSH.ORDER_DATE, LSH.STATUS, LSH.ADDRESS, LSH.LATITUDE, \
LSH.LONGITUDE, LSH.REMARK, LSH.DELIVERY_DATE, LSH.CREATED_BY AS USER_ID, LSH.INSTOCK_FLAG, LSH.BEAT_ID as BeatId, LMO.OUTLET_ID, LMO.OUTLET_NAME, LMO.OUTLET_CODE, LMO.PROPRIETOR_NAME, LMPL.LIST_PRICE, LSH.PRICE_LIST, LMPL.PTR_PRICE AS PTR_PRICE, LSL.PTR_PRICE AS LINE_PTR_PRICE, \
LSL.LIST_PRICE AS LINE_LIST_PRICE, LSL.LINE_ID, LSL.PRODUCT_ID AS PRODUCT_ID_1, LSL.QUANTITY, LSL.DELIVERY_DATE AS DELIVERY_DATE1, \
LSH.SIEBEL_REMARK, LSH.SIEBEL_STATUS, LSH.SIEBEL_INVOICENUMBER, \
CASE WHEN LSH.STATUS = 'DRAFT' THEN 1  WHEN LSH.STATUS = 'PENDING_APPROVAL' THEN 2 \
WHEN LSH.STATUS = 'INPROCESS' THEN 3  WHEN LSH.STATUS = 'REJECTED' THEN 4  \
WHEN LSH.STATUS = 'ERROR' THEN 5 WHEN LSH.STATUS = 'APPROVED' THEN 6 \
WHEN LSH.STATUS = 'PROCESSED' THEN 7 ELSE 9 END AS STATUS_O FROM  LT_SO_HEADERS LSH \
LEFT JOIN LT_SO_LINES LSL ON LSH.HEADER_ID = LSL.HEADER_ID LEFT JOIN LT_MAST_OUTLETS_V LMO ON LSH.OUTLET_ID = LMO.OUTLET_ID \
LEFT JOIN LT_MAST_PRODUCTS_V LMP ON LMP.PRODUCT_ID = LSL.PRODUCT_ID \
LEFT JOIN LT_MAST_PRICE_LISTS_V LMPL ON LMPL.PRODUCT_CODE = LMP.PRODUCT_CODE AND LMPL.PRICE_LIST = LMO.PRICE_LIST \
LEFT JOIN LT_MAST_DISTRIBUTORS_V LMD ON LMO.DISTRIBUTOR_ID = LMD.DISTRIBUTOR_ID \
LEFT JOIN LT_MAST_INVENTORY_V LMI ON LMP.PRODUCT_CODE = LMI.PRODUCT_CODE AND LMD.DISTRIBUTOR_CODE = LMI.DIST_CODE \
WHERE LMO.DISTRIBUTOR_ID = nvl(?,LMO.DISTRIBUTOR_ID) \
AND lsh.CREATED_BY != ? \
AND LSH.STATUS NOT IN ('APPROVED','REJECTED') \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE(? ,COALESCE(UPPER(LSH.STATUS),'xx')) AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx')) AND COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME ||  LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) \
LIKE COALESCE( ?, COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) ) \


getOrderHeaderV13AreaHead = SELECT LMI.QUANTITY AS INVENTORY_QUANTITY, LSH.CREATION_DATE AS CDATE, (LMO.ADDRESS_1 || ' ' || LMO.ADDRESS_2) AS OUTLET_ADDRESS, LSH.HEADER_ID, \
LSH.ORDER_NUMBER, LMP.PRODUCT_ID, LMP.CATEGORY_ID, LMP.ORG_ID, LMP.SUB_CATEGORY_ID, LMP.PRODUCT_TYPE, LMP."CATEGORY", \
LMP.SUBCATEGORY, LMP.PRODUCT_CODE, LMP.PRODUCT_NAME, LMP.PRODUCT_DESC, LMP.PRIMARY_UOM, LMP.SECONDARY_UOM, \
LMP.SECONDARY_UOM_VALUE, LMP.UNITS_PER_CASE, LMP."SEGMENT", LMP.BRAND, LMP."STYLE", LMP.FLAVOR, LMP.CASE_PACK, \
LMP.HSN_CODE, LMP.ORDERABLE, LMP.PRODUCT_IMAGE, LMP.STATUS AS STATUS1, LSH.ORDER_DATE, LSH.STATUS, LSH.ADDRESS, LSH.LATITUDE, \
LSH.LONGITUDE, LSH.REMARK, LSH.DELIVERY_DATE, LSH.CREATED_BY AS USER_ID, LSH.INSTOCK_FLAG, LSH.BEAT_ID as Beat_Id, LMO.OUTLET_ID, LMO.OUTLET_NAME, LMO.OUTLET_CODE, LMO.PROPRIETOR_NAME, LMPL.LIST_PRICE, LSH.PRICE_LIST, LMPL.PTR_PRICE AS PTR_PRICE, LSL.PTR_PRICE AS LINE_PTR_PRICE, \
LSL.LIST_PRICE AS LINE_LIST_PRICE, LSL.LINE_ID, LSL.PRODUCT_ID AS PRODUCT_ID_1, LSL.QUANTITY, LSL.DELIVERY_DATE AS DELIVERY_DATE1, \
LSH.SIEBEL_REMARK, LSH.SIEBEL_STATUS, LSH.SIEBEL_INVOICENUMBER, \
CASE WHEN LSH.STATUS = 'DRAFT' THEN 1  WHEN LSH.STATUS = 'PENDING_APPROVAL' THEN 2 \
WHEN LSH.STATUS = 'INPROCESS' THEN 3  WHEN LSH.STATUS = 'REJECTED' THEN 4  \
WHEN LSH.STATUS = 'ERROR' THEN 5 WHEN LSH.STATUS = 'APPROVED' THEN 6 \
WHEN LSH.STATUS = 'PROCESSED' THEN 7 ELSE 9 END AS STATUS_O FROM  LT_SO_HEADERS LSH \
LEFT JOIN LT_SO_LINES LSL ON LSH.HEADER_ID = LSL.HEADER_ID LEFT JOIN LT_MAST_OUTLETS_V LMO ON LSH.OUTLET_ID = LMO.OUTLET_ID \
LEFT JOIN LT_MAST_PRODUCTS_V LMP ON LMP.PRODUCT_ID = LSL.PRODUCT_ID \
LEFT JOIN LT_MAST_PRICE_LISTS_V LMPL ON LMPL.PRODUCT_CODE = LMP.PRODUCT_CODE AND LMPL.PRICE_LIST = LMO.PRICE_LIST \
LEFT JOIN LT_MAST_DISTRIBUTORS_V LMD ON LMO.DISTRIBUTOR_ID = LMD.DISTRIBUTOR_ID \
LEFT JOIN LT_MAST_INVENTORY_V LMI ON LMP.PRODUCT_CODE = LMI.PRODUCT_CODE AND LMD.DISTRIBUTOR_CODE = LMI.DIST_CODE \
WHERE LMO.DISTRIBUTOR_ID IN (?) \
AND LSH.STATUS NOT IN ('APPROVED','REJECTED') \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE(? ,COALESCE(UPPER(LSH.STATUS),'xx')) AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx')) AND COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME ||  LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) \
LIKE COALESCE( ?, COALESCE( UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ), 'xx' ) ) \


getAllUsersForEmail = select * from lt_mast_users lmu  \
where 1=1  \
and upper(status) = 'ACTIVE'  \
and upper(user_type ) in ('SALESOFFICER','AREAHEAD', 'SYSTEMADMINISTRATOR')  \
and distributor_id = (  \
SELECT DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_v LMO  \
WHERE OUTLET_ID = ?)


getSoHeaderFromProcedure = SELECT HEADER_ID FROM LT_ORDER_LINE_DATA_GT

getOrderV2FromProcedure = SELECT A.* FROM( SELECT LMI.QUANTITY AS INVENTORYQUANTITY , LSH.CREATION_DATE  AS CDATE,(LMO.ADDRESS_1 ||' '|| LMO.ADDRESS_2)  AS OUTLETADDRESS \
	,LSH.HEADER_ID, LSH.ORDER_NUMBER, LMP.PRODUCT_ID,LMP.CATEGORY_ID,LMP.ORG_ID,LMP.SUB_CATEGORY_ID, \
    LMP.PRODUCT_TYPE,LMP."CATEGORY",LMP.SUBCATEGORY,LMP.PRODUCT_CODE,LMP.PRODUCT_NAME,LMP.PRODUCT_DESC, \
    LMP.PRIMARY_UOM,LMP.SECONDARY_UOM,LMP.SECONDARY_UOM_VALUE,LMP.UNITS_PER_CASE,LMP."SEGMENT", \
    LMP.BRAND,LMP."STYLE",LMP.FLAVOR,LMP.CASE_PACK,LMP.HSN_CODE,LMP.ORDERABLE,LMP.PRODUCT_IMAGE,LMP.STATUS STATUS1 \
    , LSH.ORDER_DATE, LSH.STATUS STATUS, LSH.ADDRESS, \
	lsh.latitude , lsh.longitude, lsh.remark,   \
	lsh.delivery_date, lsh.created_by as userId, lsh.INSTOCK_FLAG, lsh.BEAT_ID, lmo.outlet_id , lmo.outlet_name,lmo.outlet_code, lmo.proprietor_name, \
	LMPL.LIST_PRICE, LSH.PRICE_LIST , LMPL.PTR_PRICE AS ptrPrice ,LSL.PTR_PRICE AS LINEPTRPRICE, LSL.LIST_PRICE AS LINELISTPRICE, \
	lsl.line_id, lsl.product_id product_id_1, lsl.quantity , lsl.delivery_date delivery_date1, lsh.SIEBEL_REMARK, lsh.SIEBEL_STATUS, lsh.SIEBEL_INVOICENUMBER \
	, case when lsh.status = 'DRAFT' then 1  \
		when lsh.status = 'PENDING_APPROVAL' then 2 \
		when lsh.status = 'INPROCESS' then 3  \
		when lsh.status = 'REJECTED' then 4  \
  	    when lsh.status = 'ERROR' then 5 \
  	    when lsh.status = 'APPROVED' then 6 \
  	    when lsh.status = 'PROCESSED' then 7 \
  	    else 9 \
  	    end status_o \
	from  \
		lt_so_headers lsh \
		left join lt_so_lines lsl on lsh.header_id = lsl.header_id \
		left join lt_mast_outlets_v lmo on lsh.outlet_id = lmo.outlet_id \
		left join lt_mast_products_v lmp on lmp.product_id = lsl.product_id \
		left join lt_mast_price_lists_v lmpl on lmpl.product_code = lmp.product_code and lmpl.price_list  = lmo.price_list \
		left join lt_mast_distributors_v lmd on lmo.distributor_id = lmd.distributor_id \
		left join lt_mast_inventory_v lmi on lmp.product_code = lmi.product_code and lmd.distributor_code = lmi.dist_code \
	WHERE 1 = 1


getOrderV2DataFromProcedure = SELECT * FROM LT_ORDER_LINE_DATA_GT


#getMultipleMrpForProductV1 = select DISTINCT \
#T20.X_LOT_GRADE AS MRP, \
#sum(t20.qty) AS Inventory_Quantity, \
#T20.PROD_ID AS Product_Id, \
#NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT \
#where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
#FROM \
#SIEBEL.S_PROD_INT T1, \
#SIEBEL.S_VOD T2, \
#SIEBEL.S_PROD_LN T3, \
#SIEBEL.S_ASSET_OM T4, \
#SIEBEL.S_ISS_OBJ_DEF T5, \
#SIEBEL.S_PARTY T6, \
#SIEBEL.S_VOD_VER T7, \
#SIEBEL.S_ASSET_BU T8, \
#SIEBEL.S_CTLG_CAT T9, \
#SIEBEL.S_PARTY T10, \
#SIEBEL.S_PROD_INT T11, \
#SIEBEL.S_CTLG_CAT T12, \
#SIEBEL.S_ORG_EXT T13, \
#SIEBEL.S_ASSET_OM T14, \
#SIEBEL.S_ASSET T15, \
#SIEBEL.S_DOC_AGREE T16, \
#SIEBEL.S_ORG_EXT T17, \
#SIEBEL.S_PROD_INV_CAT T18, \
#SIEBEL.S_PROD_INV T19, \
#SIEBEL.S_ASSET T20 \
#WHERE \
#T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
#T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
#T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
#T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
#T20.PROD_ID = T11.ROW_ID AND \
#T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
#T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
#T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
#T2.ROW_ID = T7.VOD_ID AND \
#T15.PROD_ID = T1.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
#T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
#T20.PROD_INV_ID = T19.ROW_ID (+) AND \
#T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
#T20.PR_CON_ID = T10.ROW_ID (+) AND \
#T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
#T8.BU_ID = T6.ROW_ID (+) AND \
#T8.BU_ID = T13.PAR_ROW_ID (+) AND \
#((T7.VER_NUM = 1) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID) AND T20.QTY > 0) \
#GROUP BY t20.X_LOT_GRADE,T20.PROD_ID


#getMultipleMrpForProductV1 = select DISTINCT \
#T20.X_LOT_GRADE AS MRP, \
#XXATFL_GET_INVENTORY_QTY(T20.bu_id,T20.PROD_ID) AS Inventory_Quantity, \
#T20.PROD_ID AS Product_Id, \
#NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT \
#where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
#FROM \
#SIEBEL.S_PROD_INT T1, \
#SIEBEL.S_VOD T2, \
#SIEBEL.S_PROD_LN T3, \
#SIEBEL.S_ASSET_OM T4, \
#SIEBEL.S_ISS_OBJ_DEF T5, \
#SIEBEL.S_PARTY T6, \
#SIEBEL.S_VOD_VER T7, \
#SIEBEL.S_ASSET_BU T8, \
#SIEBEL.S_CTLG_CAT T9, \
#SIEBEL.S_PARTY T10, \
#SIEBEL.S_PROD_INT T11, \
#SIEBEL.S_CTLG_CAT T12, \
#SIEBEL.S_ORG_EXT T13, \
#SIEBEL.S_ASSET_OM T14, \
#SIEBEL.S_ASSET T15, \
#SIEBEL.S_DOC_AGREE T16, \
#SIEBEL.S_ORG_EXT T17, \
#SIEBEL.S_PROD_INV_CAT T18, \
#SIEBEL.S_PROD_INV T19, \
#SIEBEL.S_ASSET T20 \
#WHERE \
#T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
#T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
#T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
#T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
#T20.PROD_ID = T11.ROW_ID AND \
#T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
#T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
#T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
#T2.ROW_ID = T7.VOD_ID AND \
#T15.PROD_ID = T1.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
#T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
#T20.PROD_INV_ID = T19.ROW_ID (+) AND \
#T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
#T20.PR_CON_ID = T10.ROW_ID (+) AND \
#T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
#T8.BU_ID = T6.ROW_ID (+) AND \
#T8.BU_ID = T13.PAR_ROW_ID (+) AND \
#((T7.VER_NUM = 1) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID) \
#) 


getMultipleMrpForProductV1 = select DISTINCT \
T20.PROD_ID AS product_id, \
T20.X_LOT_GRADE AS MRP, \
NVL((SELECT SUM(SPIV.QTY) \
         FROM SIEBEL.S_ORG_EXT SOE, \
              SIEBEL.S_INVLOC SI, \
              SIEBEL.S_PROD_INVLOC SPIL, \
              SIEBEL.S_PROD_INV SPIV, \
              SIEBEL.S_PROD_INV_CAT SPIC \
         WHERE SOE.ROW_ID = ? \
           AND SI.ACTIVE_FLG = 'Y' \
           AND SPIL.PROD_ID = T20.PROD_ID \
           AND SOE.ROW_ID = SI.BU_ID \
           AND SI.ROW_ID = SPIL.INVLOC_ID \
           AND SPIV.PROD_INVLOC_ID = SPIL.ROW_ID \
           AND SI.X_INVLOC_CODE = 'Primary' \
           AND SPIV.PROD_INV_CAT_ID = SPIC.ROW_ID \
           AND SPIC.STATUS_CD = 'Good' \
           AND SPIC.AVAIL_CD = 'On Hand'), 0) \
    - \
    NVL((SELECT SUM(SPIV.QTY) \
         FROM SIEBEL.S_ORG_EXT SOE, \
              SIEBEL.S_INVLOC SI, \
              SIEBEL.S_PROD_INVLOC SPIL, \
              SIEBEL.S_PROD_INV SPIV, \
              SIEBEL.S_PROD_INV_CAT SPIC \
         WHERE SOE.ROW_ID = ? \
           AND SI.ACTIVE_FLG = 'Y' \
           AND SPIL.PROD_ID = T20.PROD_ID \
           AND SOE.ROW_ID = SI.BU_ID \
           AND SI.ROW_ID = SPIL.INVLOC_ID \
           AND SPIV.PROD_INVLOC_ID = SPIL.ROW_ID \
           AND SI.X_INVLOC_CODE = 'Primary' \
           AND SPIV.PROD_INV_CAT_ID = SPIC.ROW_ID \
           AND SPIC.STATUS_CD = 'Good' \
           AND SPIC.AVAIL_CD = 'Reserved'), 0) AS Inventory_Quantity, \
           NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
FROM \
SIEBEL.S_PROD_INT T1, \
SIEBEL.S_VOD T2, \
SIEBEL.S_PROD_LN T3, \
SIEBEL.S_ASSET_OM T4, \
SIEBEL.S_ISS_OBJ_DEF T5, \
SIEBEL.S_PARTY T6, \
SIEBEL.S_VOD_VER T7, \
SIEBEL.S_ASSET_BU T8, \
SIEBEL.S_CTLG_CAT T9, \
SIEBEL.S_PARTY T10, \
SIEBEL.S_PROD_INT T11, \
SIEBEL.S_CTLG_CAT T12, \
SIEBEL.S_ORG_EXT T13, \
SIEBEL.S_ASSET_OM T14, \
SIEBEL.S_ASSET T15, \
SIEBEL.S_DOC_AGREE T16, \
SIEBEL.S_ORG_EXT T17, \
SIEBEL.S_PROD_INV_CAT T18, \
SIEBEL.S_PROD_INV T19, \
SIEBEL.S_ASSET T20 \
WHERE \
T2.ROW_ID = T5.VOD_ID (+) \
AND T5.LAST_VERS (+) = 0 \
AND T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) \
AND T20.CUR_AGREE_ID = T16.ROW_ID (+) \
AND T19.PROD_INV_CAT_ID = T18.ROW_ID (+) \
AND T20.PROD_ID = T11.ROW_ID \
AND T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) \
AND T12.PAR_CAT_ID = T9.ROW_ID (+) \
AND T11.CFG_MODEL_ID = T2.OBJECT_NUM \
AND T2.ROW_ID = T7.VOD_ID \
AND T15.PROD_ID = T1.ROW_ID (+) \
AND T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) \
AND T11.PR_PROD_LN_ID = T3.ROW_ID (+) \
AND T20.ROOT_ASSET_ID = T15.ROW_ID (+) \
AND T20.PROD_INV_ID = T19.ROW_ID (+) \
AND T20.ROW_ID = T4.PAR_ROW_ID (+) \
AND T20.PR_CON_ID = T10.ROW_ID (+) \
AND T20.BU_ID = T8.BU_ID (+) \
AND T20.ROW_ID = T8.ASSET_ID (+) \
AND T8.BU_ID = T6.ROW_ID (+) \
AND T8.BU_ID = T13.PAR_ROW_ID (+) \
AND ((T7.VER_NUM = 1) \
AND (T20.PROD_ID IN (?) \
AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
(T20.PROD_ID IN (?) \
AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID) \
)


#getMultipleMrpForOutofStockProductV1 = select DISTINCT \
#T20.X_LOT_GRADE AS MRP, \
#sum(t20.qty) AS Inventory_Quantity, \
#T20.PROD_ID AS Product_Id, \
#NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT \
#where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
#FROM \
#SIEBEL.S_PROD_INT T1, \
#SIEBEL.S_VOD T2, \
#SIEBEL.S_PROD_LN T3, \
#SIEBEL.S_ASSET_OM T4, \
#SIEBEL.S_ISS_OBJ_DEF T5, \
#SIEBEL.S_PARTY T6, \
#SIEBEL.S_VOD_VER T7, \
#SIEBEL.S_ASSET_BU T8, \
#SIEBEL.S_CTLG_CAT T9, \
#SIEBEL.S_PARTY T10, \
#SIEBEL.S_PROD_INT T11, \
#SIEBEL.S_CTLG_CAT T12, \
#SIEBEL.S_ORG_EXT T13, \
#SIEBEL.S_ASSET_OM T14, \
#SIEBEL.S_ASSET T15, \
#SIEBEL.S_DOC_AGREE T16, \
#SIEBEL.S_ORG_EXT T17, \
#SIEBEL.S_PROD_INV_CAT T18, \
#SIEBEL.S_PROD_INV T19, \
#SIEBEL.S_ASSET T20 \
#WHERE \
#T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
#T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
#T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
#T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
#T20.PROD_ID = T11.ROW_ID AND \
#T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
#T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
#T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
#T2.ROW_ID = T7.VOD_ID AND \
#T15.PROD_ID = T1.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
#T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
#T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
#T20.PROD_INV_ID = T19.ROW_ID (+) AND \
#T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
#T20.PR_CON_ID = T10.ROW_ID (+) AND \
#T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
#T8.BU_ID = T6.ROW_ID (+) AND \
#T8.BU_ID = T13.PAR_ROW_ID (+) AND \
#((T7.VER_NUM = 1) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
#(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
#FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
#WHERE SOE.ROW_ID = ? \
#AND SI.ACTIVE_FLG = 'Y' \
#AND spil.prod_id IN (?) \
#AND SOE.ROW_ID = SI.BU_ID \
#AND SI.ROW_ID = SPIL.INVLOC_ID) AND T20.QTY = 0) \
#GROUP BY t20.X_LOT_GRADE,T20.PROD_ID


getMultipleMrpForOutofStockProductV1 = select DISTINCT \
T20.X_LOT_GRADE AS MRP, \
XXATFL_GET_INVENTORY_QTY(T20.bu_id,T20.PROD_ID) AS Inventory_Quantity, \
T20.PROD_ID AS Product_Id, \
NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT \
where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
FROM \
SIEBEL.S_PROD_INT T1, \
SIEBEL.S_VOD T2, \
SIEBEL.S_PROD_LN T3, \
SIEBEL.S_ASSET_OM T4, \
SIEBEL.S_ISS_OBJ_DEF T5, \
SIEBEL.S_PARTY T6, \
SIEBEL.S_VOD_VER T7, \
SIEBEL.S_ASSET_BU T8, \
SIEBEL.S_CTLG_CAT T9, \
SIEBEL.S_PARTY T10, \
SIEBEL.S_PROD_INT T11, \
SIEBEL.S_CTLG_CAT T12, \
SIEBEL.S_ORG_EXT T13, \
SIEBEL.S_ASSET_OM T14, \
SIEBEL.S_ASSET T15, \
SIEBEL.S_DOC_AGREE T16, \
SIEBEL.S_ORG_EXT T17, \
SIEBEL.S_PROD_INV_CAT T18, \
SIEBEL.S_PROD_INV T19, \
SIEBEL.S_ASSET T20 \
WHERE \
T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
T20.PROD_ID = T11.ROW_ID AND \
T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
T2.ROW_ID = T7.VOD_ID AND \
T15.PROD_ID = T1.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
T20.PROD_INV_ID = T19.ROW_ID (+) AND \
T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
T20.PR_CON_ID = T10.ROW_ID (+) AND \
T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
T8.BU_ID = T6.ROW_ID (+) AND \
T8.BU_ID = T13.PAR_ROW_ID (+) AND \
((T7.VER_NUM = 1) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID) \
AND XXATFL_GET_INVENTORY_QTY(T20.bu_id,T20.PROD_ID) = 0) 

	
checkOrderNoInSiebel = SELECT so.ORDER_NUM FROM siebel.S_ORDER so WHERE so.ORDER_NUM = ?

getPriceListAgainstHeaderId = SELECT lsh.PRICE_LIST FROM LT_SO_HEADERS lsh WHERE lsh.HEADER_ID in (?)

getMultipleMrpForInstockProductV1 = SELECT \
	DISTINCT \
T20.PROD_ID AS PRODUCT_ID, \
	T20.X_LOT_GRADE AS MRP, \
	XXATFL_NEW_SIEBEL_LAKSHYA_PKG.get_new_ptr_val(T20.X_LOT_GRADE, \
	T22.NAME, \
	T21.PROD_ID) AS ptr_price, \
	sum(t20.qty) AS Inventory_Quantity, \
	NVL((SELECT MAX(case_pack) FROM SIEBEL.S_PROD_INT \
WHERE ROW_ID = T20.PROD_ID), 0) AS units_per_case \
FROM \
	SIEBEL.S_PROD_INT T1, \
	SIEBEL.S_VOD T2, \
	SIEBEL.S_PROD_LN T3, \
	SIEBEL.S_ASSET_OM T4, \
	SIEBEL.S_ISS_OBJ_DEF T5, \
	SIEBEL.S_PARTY T6, \
	SIEBEL.S_VOD_VER T7, \
	SIEBEL.S_ASSET_BU T8, \
	SIEBEL.S_CTLG_CAT T9, \
	SIEBEL.S_PARTY T10, \
	SIEBEL.S_PROD_INT T11, \
	SIEBEL.S_CTLG_CAT T12, \
	SIEBEL.S_ORG_EXT T13, \
	SIEBEL.S_ASSET_OM T14, \
	SIEBEL.S_ASSET T15, \
	SIEBEL.S_DOC_AGREE T16, \
	SIEBEL.S_ORG_EXT T17, \
	SIEBEL.S_PROD_INV_CAT T18, \
	SIEBEL.S_PROD_INV T19, \
	SIEBEL.S_ASSET T20, \
	siebel.s_pri_lst_item T21, \
	siebel.s_pri_lst T22 \
WHERE \
	T2.ROW_ID = T5.VOD_ID (+) \
	AND T5.LAST_VERS (+) = 0 \
	AND T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) \
	AND T20.CUR_AGREE_ID = T16.ROW_ID (+) \
	AND T19.PROD_INV_CAT_ID = T18.ROW_ID (+) \
	AND T20.PROD_ID = T11.ROW_ID \
	AND T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) \
	AND T12.PAR_CAT_ID = T9.ROW_ID (+) \
	AND T11.CFG_MODEL_ID = T2.OBJECT_NUM \
	AND T2.ROW_ID = T7.VOD_ID \
	AND T15.PROD_ID = T1.ROW_ID (+) \
	AND T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) \
	AND T11.PR_PROD_LN_ID = T3.ROW_ID (+) \
	AND T20.ROOT_ASSET_ID = T15.ROW_ID (+) \
	AND T20.PROD_INV_ID = T19.ROW_ID (+) \
	AND T20.ROW_ID = T4.PAR_ROW_ID (+) \
	AND T20.PR_CON_ID = T10.ROW_ID (+) \
	AND T20.BU_ID = T8.BU_ID (+) \
	AND T20.ROW_ID = T8.ASSET_ID (+) \
	AND T8.BU_ID = T6.ROW_ID (+) \
	AND T8.BU_ID = T13.PAR_ROW_ID (+) \
	AND T1.ROW_ID = T21.PROD_ID \
	AND T21.PRI_LST_ID = T22.ROW_ID \
	AND ((T7.VER_NUM = 1) \
	AND (T20.PROD_ID IN (?) \
	AND T20.INVLOC_ID IN ( \
			SELECT \
				soe.PR_FULFL_INVLOC_ID \
			FROM \
				SIEBEL.S_ORG_EXT SOE, \
				SIEBEL.S_INVLOC SI, \
				siebel.s_prod_invloc spil \
			WHERE \
				SOE.ROW_ID = ? \
				AND SI.ACTIVE_FLG = 'Y' \
				AND spil.prod_id IN (?) \
					AND SOE.ROW_ID = SI.BU_ID \
					AND SI.ROW_ID = SPIL.INVLOC_ID))) \
	AND \
(T20.PROD_ID IN (?) \
		AND T20.INVLOC_ID IN ( \
		SELECT \
			soe.PR_FULFL_INVLOC_ID \
		FROM \
			SIEBEL.S_ORG_EXT SOE, \
			SIEBEL.S_INVLOC SI, \
			siebel.s_prod_invloc spil \
		WHERE \
			SOE.ROW_ID = ? \
			AND SI.ACTIVE_FLG = 'Y' \
			AND spil.prod_id IN (?) \
				AND SOE.ROW_ID = SI.BU_ID \
				AND SI.ROW_ID = SPIL.INVLOC_ID) \
		AND T20.QTY > 0) \
	AND T22.NAME IN (?) \
GROUP BY \
	t20.X_LOT_GRADE, \
	T20.PROD_ID, \
	T22.NAME, \
	T21.PROD_ID
	
#comment on 9-Sep-2024 bcz venkat give new query for the same.
#getOpenOrderWithNewStatusFromSiebel = Select so.order_num AS order_Number, \
#spi.row_id AS product_Id,spi.Name AS product_Name, spi.x_long_desc ||' '|| '(' || spi.PART_NUM || ')' AS product_Code, \
#soi.EXTD_QTY quantity, soi.STATUS_CD AS status \
#From siebel.s_order_item soi,siebel.s_order so,siebel.s_prod_int spi \
#where soi.STATUS_CD = 'New' \
#and soi.order_id = so.row_id \
#and spi.row_id = soi.prod_id \
#and spi.row_id in (?) \
#and so.bu_id = ? \
#and so.accnt_id = ?		
	
	
#getOpenOrderWithNewStatusFromSiebel = Select so.order_num AS order_Number, \
#spi.row_id AS product_Id,spi.Name AS product_Name, spi.PART_NUM AS product_Code, \
#soi.EXTD_QTY quantity, soi.STATUS_CD AS status \

getOpenOrderWithNewStatusFromSiebel = SELECT DISTINCT spi.x_long_desc ||' '|| '(' || spi.PART_NUM || ')' AS product_Code \
From siebel.s_order_item soi,siebel.s_order so,siebel.s_prod_int spi,siebel.s_order_type sot \
where sot.row_id = so.ordeR_type_id \
and sot.name in ('Service Order') \
AND so.STATUS_CD IN ('New','Cancelled','Rejected') \
AND soi.STATUS_CD IN ('New') \
and soi.order_id = so.row_id \
and spi.row_id = soi.prod_id \
and spi.row_id in (?) \
and so.bu_id = ? \
and so.accnt_id = ?
	
	
getMultipleMrpForTemplateProductV1 = select DISTINCT \
T20.PROD_ID AS product_id, \
T20.X_LOT_GRADE AS MRP, \
sum(t20.qty) AS Inventory_Quantity, \
NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
FROM \
SIEBEL.S_PROD_INT T1, \
SIEBEL.S_VOD T2, \
SIEBEL.S_PROD_LN T3, \
SIEBEL.S_ASSET_OM T4, \
SIEBEL.S_ISS_OBJ_DEF T5, \
SIEBEL.S_PARTY T6, \
SIEBEL.S_VOD_VER T7, \
SIEBEL.S_ASSET_BU T8, \
SIEBEL.S_CTLG_CAT T9, \
SIEBEL.S_PARTY T10, \
SIEBEL.S_PROD_INT T11, \
SIEBEL.S_CTLG_CAT T12, \
SIEBEL.S_ORG_EXT T13, \
SIEBEL.S_ASSET_OM T14, \
SIEBEL.S_ASSET T15, \
SIEBEL.S_DOC_AGREE T16, \
SIEBEL.S_ORG_EXT T17, \
SIEBEL.S_PROD_INV_CAT T18, \
SIEBEL.S_PROD_INV T19, \
SIEBEL.S_ASSET T20 \
WHERE \
T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
T20.PROD_ID = T11.ROW_ID AND \
T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
T2.ROW_ID = T7.VOD_ID AND \
T15.PROD_ID = T1.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
T20.PROD_INV_ID = T19.ROW_ID (+) AND \
T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
T20.PR_CON_ID = T10.ROW_ID (+) AND \
T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
T8.BU_ID = T6.ROW_ID (+) AND \
T8.BU_ID = T13.PAR_ROW_ID (+) AND \
((T7.VER_NUM = 1) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID) AND T20.QTY > 0) \
GROUP BY t20.X_LOT_GRADE,T20.PROD_ID
	
	
getMrpForMultipleProductV1 = select DISTINCT \
T20.PROD_ID AS product_id, \
T20.X_LOT_GRADE AS MRP, \
sum(t20.qty) AS Inventory_Quantity, \
NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
FROM \
SIEBEL.S_PROD_INT T1, \
SIEBEL.S_VOD T2, \
SIEBEL.S_PROD_LN T3, \
SIEBEL.S_ASSET_OM T4, \
SIEBEL.S_ISS_OBJ_DEF T5, \
SIEBEL.S_PARTY T6, \
SIEBEL.S_VOD_VER T7, \
SIEBEL.S_ASSET_BU T8, \
SIEBEL.S_CTLG_CAT T9, \
SIEBEL.S_PARTY T10, \
SIEBEL.S_PROD_INT T11, \
SIEBEL.S_CTLG_CAT T12, \
SIEBEL.S_ORG_EXT T13, \
SIEBEL.S_ASSET_OM T14, \
SIEBEL.S_ASSET T15, \
SIEBEL.S_DOC_AGREE T16, \
SIEBEL.S_ORG_EXT T17, \
SIEBEL.S_PROD_INV_CAT T18, \
SIEBEL.S_PROD_INV T19, \
SIEBEL.S_ASSET T20 \
WHERE \
T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
T20.PROD_ID = T11.ROW_ID AND \
T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
T2.ROW_ID = T7.VOD_ID AND \
T15.PROD_ID = T1.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
T20.PROD_INV_ID = T19.ROW_ID (+) AND \
T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
T20.PR_CON_ID = T10.ROW_ID (+) AND \
T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
T8.BU_ID = T6.ROW_ID (+) AND \
T8.BU_ID = T13.PAR_ROW_ID (+) AND \
((T7.VER_NUM = 1) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID) AND T20.QTY > 0) \
GROUP BY t20.X_LOT_GRADE,T20.PROD_ID
	

getMultiMrpAndInventQtyForProd = select DISTINCT \
T20.PROD_ID AS product_id, \
T20.X_LOT_GRADE AS MRP, \
sum(t20.qty) AS Inventory_Quantity, \
NVL((select MAX(case_pack) from SIEBEL.S_PROD_INT where ROW_ID = T20.PROD_ID),0) AS units_Per_Case \
FROM \
SIEBEL.S_PROD_INT T1, \
SIEBEL.S_VOD T2, \
SIEBEL.S_PROD_LN T3, \
SIEBEL.S_ASSET_OM T4, \
SIEBEL.S_ISS_OBJ_DEF T5, \
SIEBEL.S_PARTY T6, \
SIEBEL.S_VOD_VER T7, \
SIEBEL.S_ASSET_BU T8, \
SIEBEL.S_CTLG_CAT T9, \
SIEBEL.S_PARTY T10, \
SIEBEL.S_PROD_INT T11, \
SIEBEL.S_CTLG_CAT T12, \
SIEBEL.S_ORG_EXT T13, \
SIEBEL.S_ASSET_OM T14, \
SIEBEL.S_ASSET T15, \
SIEBEL.S_DOC_AGREE T16, \
SIEBEL.S_ORG_EXT T17, \
SIEBEL.S_PROD_INV_CAT T18, \
SIEBEL.S_PROD_INV T19, \
SIEBEL.S_ASSET T20 \
WHERE \
T2.ROW_ID = T5.VOD_ID (+) AND T5.LAST_VERS (+) = 0 AND \
T11.CG_PR_CTLG_CAT_ID = T12.ROW_ID (+) AND \
T20.CUR_AGREE_ID = T16.ROW_ID (+) AND \
T19.PROD_INV_CAT_ID = T18.ROW_ID (+) AND \
T20.PROD_ID = T11.ROW_ID AND \
T20.OWNER_ACCNT_ID = T17.PAR_ROW_ID (+) AND \
T12.PAR_CAT_ID = T9.ROW_ID (+) AND \
T11.CFG_MODEL_ID = T2.OBJECT_NUM AND \
T2.ROW_ID = T7.VOD_ID AND \
T15.PROD_ID = T1.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T14.PAR_ROW_ID (+) AND \
T11.PR_PROD_LN_ID = T3.ROW_ID (+) AND \
T20.ROOT_ASSET_ID = T15.ROW_ID (+) AND \
T20.PROD_INV_ID = T19.ROW_ID (+) AND \
T20.ROW_ID = T4.PAR_ROW_ID (+) AND \
T20.PR_CON_ID = T10.ROW_ID (+) AND \
T20.BU_ID = T8.BU_ID (+) AND T20.ROW_ID = T8.ASSET_ID (+) AND \
T8.BU_ID = T6.ROW_ID (+) AND \
T8.BU_ID = T13.PAR_ROW_ID (+) AND \
((T7.VER_NUM = 1) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID))) AND \
(T20.PROD_ID IN (?) AND T20.INVLOC_ID in (select soe.PR_FULFL_INVLOC_ID \
FROM SIEBEL.S_ORG_EXT SOE,SIEBEL.S_INVLOC SI, siebel.s_prod_invloc spil \
WHERE SOE.ROW_ID = ? \
AND SI.ACTIVE_FLG = 'Y' \
AND spil.prod_id IN (?) \
AND SOE.ROW_ID = SI.BU_ID \
AND SI.ROW_ID = SPIL.INVLOC_ID)) \
GROUP BY t20.X_LOT_GRADE,T20.PROD_ID
	
	
getPriceListId = SELECT DISTINCT PRICE_LIST_ID  FROM LT_MAST_PRICE_LISTS_V lmplv \
WHERE lmplv.PRICE_LIST= ?

findDistributorIdAgainstOutletId = SELECT lmov.DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_V lmov \
WHERE lmov.OUTLET_ID = ?


#comment on 29-oct-2024 bcz venkat gave below new query on 28-oct-2024
#getAllAreaHeadAgainstDist = SELECT \
#	sp1.row_id, \
#	soe.row_id AS distributor_Id, \
#	soe.name distributor_Name, \
#	soe.cust_stat_cd status, \
#	su.login area_head_name, \
#	sp.name position_name, \
#	si.name location_name, \
#	spy1.name territory, \
#	spy2.name Area, \
#	REPLACE(sc.CELL_PH_NUM,'+91','') AS mobile_Number, \
#	sc.alias_name AS user_Type, \
#	SC.EMAIL_ADDR AS email \
#FROM \
#	siebel.s_org_ext soe, \
#	siebel.s_postn sp, \
#	siebel.s_invloc si, \
#	siebel.s_party spy, \
#	siebel.s_party spy1, \
#	siebel.s_party spy2, \
#	siebel.s_postn sp1, \
#	siebel.s_user su, \
#	siebel.S_CONTACT sc \
#WHERE \
#	1 = 1 \
#	AND sp.bu_id = soe.row_id \
#	AND si.row_id = soe.pr_fulfl_invloc_id \
#	AND sp.postn_type_cd = 'Distributor Proprietor' \
#	AND soe.accnt_type_cd = 'Partner' \
#	AND sp.name = spy.name \
#	AND spy.par_party_id = spy1.row_id \
#	AND spy1.par_party_id = spy2.row_id \
#	AND sp1.name = spy2.name \
#	AND su.row_id = sp1.pr_emp_id \
#	AND su.ROW_ID =sc.ROW_ID \
#	AND soe.ROW_ID = ?  \
#	AND su.status_cd = 'Active'
 
 
#This is new query given by venkat on 28-Oct-2024 hence comment above query
getAllAreaHeadAgainstDist = SELECT	org.row_id,	\
ORG.row_id AS distributor_Id, \
org.name distributor_name, ORG.cust_stat_cd status,	 \
sp.name position_name,si.name location_name,s_terr.name territory,s_area.name area, \
(SELECT max(sc.alias_name) \
FROM siebel.s_user su, siebel.S_CONTACT sc \
WHERE  su.ROW_ID =sc.ROW_ID \
AND job_title = 'AREA HEAD' )user_Type, \
( \
SELECT	SC.EMAIL_ADDR \
	FROM  siebel.s_contact sc, siebel.s_user su, siebel.s_postn sp1 \
	WHERE PR_HELD_POSTN_ID = sp1.row_id \
		AND sp1.name = s_area.name \
		AND alias_name = 'Area Head' \
		AND job_title = 'AREA HEAD' \
		AND INSTR (su.login, \
		'_', \
		1) > 0 \
		AND su.STATUS_CD = 'Active' \
		AND sc.row_id = su.row_id \
		AND rownum = 1) email, \
( \
	SELECT	REPLACE(sc.CELL_PH_NUM, '+91', '') \
	FROM siebel.s_contact sc, siebel.s_user su,	siebel.s_postn sp1 \
	WHERE PR_HELD_POSTN_ID = sp1.row_id \
		AND sp1.name = s_area.name \
		AND alias_name = 'Area Head' \
		AND job_title = 'AREA HEAD' \
		AND INSTR (su.login, \
		'_', \
		1) > 0 \
			AND su.STATUS_CD = 'Active' \
			AND sc.row_id = su.row_id \
			AND rownum = 1) mobile_number, \
( \
	SELECT	su.login \
	FROM siebel.s_contact sc, siebel.s_user su,	siebel.s_postn sp1 \
	WHERE PR_HELD_POSTN_ID = sp1.row_id \
		AND sp1.name = s_area.name \
		AND alias_name = 'Area Head' \
		AND job_title = 'AREA HEAD' \
		AND INSTR (su.login, \
		'_', \
		1) > 0 \
			AND su.STATUS_CD = 'Active' \
			AND sc.row_id = su.row_id \
			AND rownum = 1) area_head_name \
FROM \
	SIEBEL.S_ORG_EXT ORG, \
	siebel.S_INVLOC si, \
	siebel.s_postn sp, \
	siebel.s_party spar, \
	siebel.s_party spar1, \
	siebel.s_region s_terr, \
	siebel.s_region s_area, \
	siebel.s_region s_reg \
WHERE \
	ORG.ACCNT_TYPE_CD = 'Partner' \
	AND org.pr_fulfl_invloc_id = si.row_id \
	AND sp.row_id = si.pr_postn_id \
	AND spar.PARTY_UID = sp.name \
	AND spar.PAR_PARTY_ID = spar1.row_id \
	AND s_terr.DESC_TEXT = 'Territory' \
	AND s_terr.name = spar1.NAME \
	AND s_area.row_id = s_terr.PAR_ROW_ID \
	AND s_area.desc_text = 'Area' \
	AND s_reg.row_id = s_area.PAR_ROW_ID \
	AND s_reg.desc_text = 'Region' \
	AND org.ROW_ID = ? 
 
  
getSystemAdministartorDetails= SELECT * FROM LT_MAST_USERS lmu WHERE USER_TYPE = 'SYSTEMADMINISTRATOR'  \
AND ORG_ID = ?

getAllSalesOfficersAgainstDist = Select sp1.row_id, \
	soe.row_id AS distributor_Id, \
	soe.name distributor_Name, \
	soe.cust_stat_cd status, \
	su.login sales_officer_name, \
	sp.name position_name, \
	si.name location_name, \
	spy1.name territory, \
	REPLACE(sc.CELL_PH_NUM,'+91','') AS mobile_Number, \
	sc.alias_name AS user_Type, \
	SC.EMAIL_ADDR AS email	\
From   siebel.s_org_ext soe, \
       siebel.s_invloc si, \
       siebel.s_postn sp, \
       siebel.s_party spy, \
       siebel.s_party spy1, \
       siebel.s_postn sp1, \
       siebel.s_user su, \
       siebel.S_CONTACT sc \
Where  soe.ROW_ID = ? \
AND sp.bu_id = soe.row_id \
AND si.row_id = soe.pr_fulfl_invloc_id \
AND sp.name = spy.name \
AND spy.par_party_id = spy1.row_id \
AND sp1.name = spy1.name \
AND su.row_id = sp1.pr_emp_id \
AND su.ROW_ID =sc.ROW_ID \
AND su.status_cd = 'Active' \
AND sp1.postn_type_cd = 'Sales Officer' \
AND sc.alias_name  = 'Sales Officer'

 
getUserIdFromMobileNo = SELECT lmu.USER_ID FROM LT_MAST_USERS lmu WHERE lmu.MOBILE_NUMBER = ?

getMobileNoFromOrderNo = SELECT lmu.MOBILE_NUMBER FROM LT_MAST_USERS lmu WHERE \
lmu.USER_ID = (SELECT lsh.CREATED_BY FROM LT_SO_HEADERS lsh \
                WHERE lsh.ORDER_NUMBER = ?)
                
#getDistIdFromOutletCode = SELECT lmov.DISTRIBUTOR_ID FROM LT_MAST_OUTLETS_V lmov WHERE lmov.OUTLET_CODE = ?  

getMobileNoFromCreatedBy = SELECT lmu.MOBILE_NUMBER FROM LT_MAST_USERS lmu \
WHERE lmu.USER_ID = ?

findDistributorIdAgainstUser = SELECT lmu.DISTRIBUTOR_ID FROM LT_MAST_USERS lmu \
WHERE lmu.USER_ID = ?
         
getDistributorIdFromAreaHead = SELECT \
	soe.row_id AS distributor_Id \
FROM \
	siebel.s_org_ext soe, \
	siebel.s_postn sp, \
	siebel.s_invloc si, \
	siebel.s_party spy, \
	siebel.s_party spy1, \
	siebel.s_party spy2, \
	siebel.s_postn sp1, \
	siebel.s_user su, \
	siebel.S_CONTACT sc \
WHERE \
	1 = 1 \
	AND sp.bu_id = soe.row_id \
	AND si.row_id = soe.pr_fulfl_invloc_id \
	AND sp.postn_type_cd = 'Distributor Proprietor' \
	AND soe.accnt_type_cd = 'Partner' \
	AND sp.name = spy.name \
	AND spy.par_party_id = spy1.row_id \
	AND spy1.par_party_id = spy2.row_id \
	AND sp1.name = spy2.name \
	AND su.row_id = sp1.pr_emp_id \
	AND su.ROW_ID =sc.ROW_ID \
	AND su.login = ? \
	AND su.status_cd = 'Active'
	

getEmpCodeFromDistributorId = SELECT DISTINCT lmu.EMPLOYEE_CODE  FROM LT_MAST_USERS lmu WHERE lmu.USER_TYPE ='AREAHEAD' \
AND lmu.DISTRIBUTOR_ID = ?	               

getSoHeaderRemovingPendingOrdersFromGetOrderV2ForAreaHead = select b.header_id from ( \
	select a.* from( SELECT lsh.header_id, lsh.status, lsh.creation_date, lsh.last_update_date, \
	case \
	when lsh.status = 'DRAFT' then 1  \
	when lsh.status = 'INPROCESS'  \
	then 3 when lsh.status = 'REJECTED'   \
	then 4 when lsh.status = 'ERROR'   \
	then 5 when lsh.status = 'APPROVED'   \
	then 6 when lsh.status = 'PROCESSED'   \
	then 7 else 9 \
	end status_o \
	FROM lt_so_headers lsh, lt_mast_outlets_v lmo   \
		WHERE 1=1   \
		and lsh.outlet_id = lmo.outlet_id   \
		AND lsh.status <>('PENDING_APPROVAL' ) \
		AND LMO.DISTRIBUTOR_ID in (?)  \
AND COALESCE(UPPER(LSH.STATUS),'xx') = COALESCE( ? ,COALESCE(UPPER(LSH.STATUS),'xx'))   \
AND COALESCE(LSH.ORDER_NUMBER ,'xx') = COALESCE( ? ,COALESCE(LSH.ORDER_NUMBER,'xx'))   \
AND COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || LMO.OUTLET_CODE ||   \
	LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME ),'xx') LIKE \
	COALESCE( ? ,COALESCE(UPPER( LSH.ORDER_NUMBER || LSH.STATUS || LSH.CREATION_DATE || LMO.OUTLET_NAME || \
	LMO.OUTLET_CODE || LMO.ADDRESS_1 || LMO.ADDRESS_2 || LMO.PROPRIETOR_NAME),'xx'))   \


getDistributorIdFromAreaHeadNew = SELECT \
	soe.row_id AS distributor_Id \
FROM \
	siebel.s_org_ext soe, \
	siebel.s_postn sp, \
	siebel.s_invloc si, \
	siebel.s_party spy, \
	siebel.s_party spy1, \
	siebel.s_party spy2, \
	siebel.s_postn sp1, \
	siebel.s_user su, \
	siebel.S_CONTACT sc \
WHERE \
	1 = 1 \
	AND sp.bu_id = soe.row_id \
	AND si.row_id = soe.pr_fulfl_invloc_id \
	AND sp.postn_type_cd = 'Distributor Proprietor' \
	AND soe.accnt_type_cd = 'Partner' \
	AND sp.name = spy.name \
	AND spy.par_party_id = spy1.row_id \
	AND spy1.par_party_id = spy2.row_id \
	AND sp1.name = spy2.name \
	AND su.row_id = sp1.pr_emp_id \
	AND su.ROW_ID =sc.ROW_ID \
	AND su.login in ('BHUWNESHWAR_PANDAYA', 'SUSHIL_KUMAR', 'GOPAGANI_ANIL', 'ARUN_SINGH', 'VENKATRAMAN_TK', 'DINANATH_MAHATO', 'MDSHARIQUE_IQBAL', 'TONY_KUNDU', 'GOPINATH_G', 'JOTHI_R') \
	AND su.status_cd = 'Active'


getDistIdFromOrderNo = SELECT lsh.DISTRIBUTOR_ID FROM LT_SO_HEADERS lsh WHERE lsh.ORDER_NUMBER = ?

